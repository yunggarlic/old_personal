'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _extends = require('@babel/runtime/helpers/extends');
var _objectWithoutPropertiesLoose = require('@babel/runtime/helpers/objectWithoutPropertiesLoose');
var React = require('react');
var ReactDOM = require('react-dom');
var THREE = require('three');
var reactThreeFiber = require('react-three-fiber');
var create$1 = require('zustand');
var web = require('@react-spring/web');
var mergeRefs = require('react-merge-refs');
var blobPolyfill = require('blob-polyfill');
var _construct = require('@babel/runtime/helpers/construct');
var LineGeometry = require('three/examples/jsm/lines/LineGeometry');
var LineMaterial = require('three/examples/jsm/lines/LineMaterial');
var Line2 = require('three/examples/jsm/lines/Line2');
var troikaThreeText = require('troika-three-text');
var RGBELoader = require('three/examples/jsm/loaders/RGBELoader');
var useAsset = require('use-asset');
var EffectComposer = require('three/examples/jsm/postprocessing/EffectComposer');
var RenderPass = require('three/examples/jsm/postprocessing/RenderPass');
var ShaderPass = require('three/examples/jsm/postprocessing/ShaderPass');
var GammaCorrectionShader = require('three/examples/jsm/shaders/GammaCorrectionShader');
var SimplexNoise = require('three/examples/jsm/math/SimplexNoise');
var DeviceOrientationControls$1 = require('three/examples/jsm/controls/DeviceOrientationControls');
var FlyControls$1 = require('three/examples/jsm/controls/FlyControls');
var OrbitControls$1 = require('three/examples/jsm/controls/OrbitControls');
var TrackballControls$1 = require('three/examples/jsm/controls/TrackballControls');
var TransformControls$1 = require('three/examples/jsm/controls/TransformControls');
var pick = require('lodash.pick');
var omit = require('lodash.omit');
var PointerLockControls$1 = require('three/examples/jsm/controls/PointerLockControls');
var FBXLoader = require('three/examples/jsm/loaders/FBXLoader');
var GLTFLoader = require('three/examples/jsm/loaders/GLTFLoader');
var DRACOLoader = require('three/examples/jsm/loaders/DRACOLoader');
var meshopt_decoder_module_js = require('three/examples/jsm/libs/meshopt_decoder.module.js');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _assertThisInitialized = require('@babel/runtime/helpers/assertThisInitialized');
var _inheritsLoose = require('@babel/runtime/helpers/inheritsLoose');
var _createClass = require('@babel/runtime/helpers/createClass');
var StatsImpl = require('three/examples/js/libs/stats.min');
var detectGpu = require('detect-gpu');
var SimplifyModifier = require('three/examples/jsm/modifiers/SimplifyModifier');
var TessellateModifier = require('three/examples/jsm/modifiers/TessellateModifier');
var EdgeSplitModifier = require('three/examples/jsm/modifiers/EdgeSplitModifier');
var CurveModifier$1 = require('three/examples/jsm/modifiers/CurveModifier');
var Sky$1 = require('three/examples/jsm/objects/Sky');
var HorizontalBlurShader = require('three/examples/jsm/shaders/HorizontalBlurShader');
var VerticalBlurShader = require('three/examples/jsm/shaders/VerticalBlurShader');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _extends__default = /*#__PURE__*/_interopDefaultLegacy(_extends);
var _objectWithoutPropertiesLoose__default = /*#__PURE__*/_interopDefaultLegacy(_objectWithoutPropertiesLoose);
var create__default = /*#__PURE__*/_interopDefaultLegacy(create$1);
var mergeRefs__default = /*#__PURE__*/_interopDefaultLegacy(mergeRefs);
var _construct__default = /*#__PURE__*/_interopDefaultLegacy(_construct);
var pick__default = /*#__PURE__*/_interopDefaultLegacy(pick);
var omit__default = /*#__PURE__*/_interopDefaultLegacy(omit);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _assertThisInitialized__default = /*#__PURE__*/_interopDefaultLegacy(_assertThisInitialized);
var _inheritsLoose__default = /*#__PURE__*/_interopDefaultLegacy(_inheritsLoose);
var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);
var StatsImpl__default = /*#__PURE__*/_interopDefaultLegacy(StatsImpl);

var v1 = new THREE.Vector3();
var v2 = new THREE.Vector3();
var v3 = new THREE.Vector3();

function defaultCalculatePosition(el, camera, size) {
  var objectPos = v1.setFromMatrixPosition(el.matrixWorld);
  objectPos.project(camera);
  var widthHalf = size.width / 2;
  var heightHalf = size.height / 2;
  return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];
}

function isObjectBehindCamera(el, camera) {
  var objectPos = v1.setFromMatrixPosition(el.matrixWorld);
  var cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);
  var deltaCamObj = objectPos.sub(cameraPos);
  var camDir = camera.getWorldDirection(v3);
  return deltaCamObj.angleTo(camDir) > Math.PI / 2;
}

function objectScale(el, camera) {
  if (camera instanceof THREE.OrthographicCamera) {
    return camera.zoom;
  } else if (camera instanceof THREE.PerspectiveCamera) {
    var objectPos = v1.setFromMatrixPosition(el.matrixWorld);
    var cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);
    var vFOV = camera.fov * Math.PI / 180;
    var dist = objectPos.distanceTo(cameraPos);
    var scaleFOV = 2 * Math.tan(vFOV / 2) * dist;
    return 1 / scaleFOV;
  } else {
    return 1;
  }
}

function objectZIndex(el, camera, zIndexRange) {
  if (camera instanceof THREE.PerspectiveCamera || camera instanceof THREE.OrthographicCamera) {
    var objectPos = v1.setFromMatrixPosition(el.matrixWorld);
    var cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);
    var dist = objectPos.distanceTo(cameraPos);
    var A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);
    var B = zIndexRange[1] - A * camera.far;
    return Math.round(A * dist + B);
  }

  return undefined;
}

var epsilon = function epsilon(value) {
  return Math.abs(value) < 1e-10 ? 0 : value;
};

function getCSSMatrix(matrix, multipliers, prepend) {
  if (prepend === void 0) {
    prepend = '';
  }

  var matrix3d = 'matrix3d(';

  for (var i = 0; i !== 16; i++) {
    matrix3d += epsilon(multipliers[i] * matrix.elements[i]) + (i !== 15 ? ',' : ')');
  }

  return prepend + matrix3d;
}

var getCameraCSSMatrix = function (multipliers) {
  return function (matrix) {
    return getCSSMatrix(matrix, multipliers);
  };
}([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);

var getObjectCSSMatrix = function (scaleMultipliers) {
  return function (matrix, factor) {
    return getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)');
  };
}(function (f) {
  return [1 / f, 1 / f, 1 / f, 1, -1 / f, -1 / f, -1 / f, -1, 1 / f, 1 / f, 1 / f, 1, 1, 1, 1, 1];
});

var Html = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _portal$current;

  var children = _ref.children,
      _ref$eps = _ref.eps,
      eps = _ref$eps === void 0 ? 0.001 : _ref$eps,
      style = _ref.style,
      className = _ref.className,
      prepend = _ref.prepend,
      center = _ref.center,
      fullscreen = _ref.fullscreen,
      portal = _ref.portal,
      distanceFactor = _ref.distanceFactor,
      _ref$sprite = _ref.sprite,
      sprite = _ref$sprite === void 0 ? false : _ref$sprite,
      _ref$transform = _ref.transform,
      transform = _ref$transform === void 0 ? false : _ref$transform,
      _ref$zIndexRange = _ref.zIndexRange,
      zIndexRange = _ref$zIndexRange === void 0 ? [16777271, 0] : _ref$zIndexRange,
      _ref$calculatePositio = _ref.calculatePosition,
      calculatePosition = _ref$calculatePositio === void 0 ? defaultCalculatePosition : _ref$calculatePositio,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["children", "eps", "style", "className", "prepend", "center", "fullscreen", "portal", "distanceFactor", "sprite", "transform", "zIndexRange", "calculatePosition"]);

  var _useThree = reactThreeFiber.useThree(),
      gl = _useThree.gl,
      scene = _useThree.scene,
      camera = _useThree.camera,
      size = _useThree.size;

  var _React$useState = React.useState(function () {
    return document.createElement('div');
  }),
      el = _React$useState[0];

  var group = React.useRef(null);
  var oldZoom = React.useRef(0);
  var oldPosition = React.useRef([0, 0]);
  var transformOuterRef = React.useRef(null);
  var transformInnerRef = React.useRef(null);
  var target = (_portal$current = portal == null ? void 0 : portal.current) != null ? _portal$current : gl.domElement.parentNode;
  React.useEffect(function () {
    if (group.current) {
      scene.updateMatrixWorld();

      if (transform) {
        el.style.cssText = "position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;";
      } else {
        var vec = calculatePosition(group.current, camera, size);
        el.style.cssText = "position:absolute;top:0;left:0;transform:translate3d(" + vec[0] + "px," + vec[1] + "px,0);transform-origin:0 0;";
      }

      if (target) {
        if (prepend) target.prepend(el);else target.appendChild(el);
      }

      return function () {
        if (target) target.removeChild(el);
        ReactDOM.unmountComponentAtNode(el);
      };
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [target, transform]);
  var styles = React.useMemo(function () {
    if (transform) {
      return {
        position: 'absolute',
        top: 0,
        left: 0,
        width: size.width,
        height: size.height,
        transformStyle: 'preserve-3d',
        pointerEvents: 'none'
      };
    } else {
      return _extends__default['default']({
        position: 'absolute',
        transform: center ? 'translate3d(-50%,-50%,0)' : 'none'
      }, fullscreen && {
        top: -size.height / 2,
        left: -size.width / 2,
        width: size.width,
        height: size.height
      }, style);
    }
  }, [style, center, fullscreen, size, transform]);
  var transformInnerStyles = React.useMemo(function () {
    return _extends__default['default']({
      position: 'absolute',
      pointerEvents: 'auto'
    }, style);
  }, [style]);
  React.useLayoutEffect(function () {
    if (transform) {
      ReactDOM.render( /*#__PURE__*/React.createElement("div", {
        ref: transformOuterRef,
        style: styles
      }, /*#__PURE__*/React.createElement("div", {
        ref: transformInnerRef,
        style: transformInnerStyles
      }, /*#__PURE__*/React.createElement("div", {
        ref: ref,
        className: className,
        children: children
      }))), el);
    } else {
      ReactDOM.render( /*#__PURE__*/React.createElement("div", {
        ref: ref,
        style: styles,
        className: className,
        children: children
      }), el);
    }
  });
  reactThreeFiber.useFrame(function () {
    if (group.current) {
      camera.updateMatrixWorld();
      var vec = transform ? oldPosition.current : calculatePosition(group.current, camera, size);

      if (transform || Math.abs(oldZoom.current - camera.zoom) > eps || Math.abs(oldPosition.current[0] - vec[0]) > eps || Math.abs(oldPosition.current[1] - vec[1]) > eps) {
        el.style.display = !isObjectBehindCamera(group.current, camera) ? 'block' : 'none';
        el.style.zIndex = "" + objectZIndex(group.current, camera, zIndexRange);

        if (transform) {
          var widthHalf = size.width / 2,
              heightHalf = size.height / 2;
          var fov = camera.projectionMatrix.elements[5] * heightHalf;
          var _ref2 = camera,
              isOrthographicCamera = _ref2.isOrthographicCamera,
              top = _ref2.top,
              left = _ref2.left,
              bottom = _ref2.bottom,
              right = _ref2.right;
          var cameraMatrix = getCameraCSSMatrix(camera.matrixWorldInverse);
          var cameraTransform = isOrthographicCamera ? "scale(" + fov + ")translate(" + epsilon(-(right + left) / 2) + "px," + epsilon((top + bottom) / 2) + "px)" : "translateZ(" + fov + "px)";
          var matrix = group.current.matrixWorld;

          if (sprite) {
            matrix = camera.matrixWorldInverse.clone().transpose().copyPosition(matrix).scale(group.current.scale);
            matrix.elements[3] = matrix.elements[7] = matrix.elements[11] = 0;
            matrix.elements[15] = 1;
          }

          el.style.width = size.width + 'px';
          el.style.height = size.height + 'px';
          el.style.perspective = isOrthographicCamera ? '' : fov + "px";

          if (transformOuterRef.current && transformInnerRef.current) {
            transformOuterRef.current.style.transform = "" + cameraTransform + cameraMatrix + "translate(" + widthHalf + "px," + heightHalf + "px)";
            transformInnerRef.current.style.transform = getObjectCSSMatrix(matrix, 1 / ((distanceFactor || 10) / 400));
          }
        } else {
          var scale = distanceFactor === undefined ? 1 : objectScale(group.current, camera) * distanceFactor;
          el.style.transform = "translate3d(" + vec[0] + "px," + vec[1] + "px,0) scale(" + scale + ")";
        }

        oldPosition.current = vec;
        oldZoom.current = camera.zoom;
      }
    }
  });
  return /*#__PURE__*/React.createElement("group", _extends__default['default']({}, props, {
    ref: group
  }));
});

var saveLastTotalLoaded = 0;
var useProgress = create__default['default'](function (set) {
  THREE.DefaultLoadingManager.onStart = function (item, loaded, total) {
    set({
      active: true,
      item: item,
      loaded: loaded,
      total: total,
      progress: (loaded - saveLastTotalLoaded) / (total - saveLastTotalLoaded) * 100
    });
  };

  THREE.DefaultLoadingManager.onLoad = function () {
    return set({
      active: false
    });
  };

  THREE.DefaultLoadingManager.onError = function (item) {
    return set(function (state) {
      return {
        errors: [].concat(state.errors, [item])
      };
    });
  };

  THREE.DefaultLoadingManager.onProgress = function (item, loaded, total) {
    if (loaded === total) {
      saveLastTotalLoaded = total;
    }

    set({
      item: item,
      loaded: loaded,
      total: total,
      progress: (loaded - saveLastTotalLoaded) / (total - saveLastTotalLoaded) * 100 || 100
    });
  };

  return {
    errors: [],
    active: false,
    progress: 0,
    item: '',
    loaded: 0,
    total: 0
  };
});

var styles = {
  container: {
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    background: '#171717',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    zIndex: 1000
  },
  inner: {
    width: 100,
    height: 3,
    background: '#272727',
    textAlign: 'center'
  },
  bar: {
    height: 3,
    width: '100%',
    background: 'white',
    transformOrigin: 'left center'
  },
  data: {
    display: 'inline-block',
    position: 'relative',
    fontVariantNumeric: 'tabular-nums',
    marginTop: '0.8em',
    color: '#f0f0f0',
    fontSize: '0.6em',
    fontFamily: "-apple-system, BlinkMacSystemFont, \"Inter\", \"Segoe UI\", \"Helvetica Neue\", Helvetica, Arial, Roboto, Ubuntu, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"",
    whiteSpace: 'nowrap'
  }
};
function Loader(_ref) {
  var containerStyles = _ref.containerStyles,
      innerStyles = _ref.innerStyles,
      barStyles = _ref.barStyles,
      dataStyles = _ref.dataStyles,
      _ref$dataInterpolatio = _ref.dataInterpolation,
      dataInterpolation = _ref$dataInterpolatio === void 0 ? function (p) {
    return "Loading " + (p * 100).toFixed(2) + "%";
  } : _ref$dataInterpolatio,
      _ref$initialState = _ref.initialState,
      initialState = _ref$initialState === void 0 ? function (active) {
    return active;
  } : _ref$initialState;

  var _useProgress = useProgress(),
      active = _useProgress.active,
      progress = _useProgress.progress;

  var transition = web.useTransition(initialState(active), {
    from: {
      opacity: 1,
      progress: 0
    },
    leave: {
      opacity: 0
    },
    update: {
      progress: progress / 100
    }
  });
  return transition(function (_ref2, active) {
    var progress = _ref2.progress,
        opacity = _ref2.opacity;
    return active && /*#__PURE__*/React.createElement(web.a.div, {
      style: _extends__default['default']({}, styles.container, {
        opacity: opacity
      }, containerStyles)
    }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
      style: _extends__default['default']({}, styles.inner, innerStyles)
    }, /*#__PURE__*/React.createElement(web.a.div, {
      style: _extends__default['default']({}, styles.bar, {
        scaleX: progress
      }, barStyles)
    }), /*#__PURE__*/React.createElement(web.a.span, {
      style: _extends__default['default']({}, styles.data, dataStyles)
    }, progress.to(dataInterpolation)))));
  });
}

function create(type) {
  var El = type + 'BufferGeometry';
  return /*#__PURE__*/React.forwardRef(function (_ref, ref) {
    var args = _ref.args,
        children = _ref.children,
        props = _objectWithoutPropertiesLoose__default['default'](_ref, ["args", "children"]);

    return /*#__PURE__*/React.createElement("mesh", _extends__default['default']({
      ref: ref
    }, props), /*#__PURE__*/React.createElement(El, {
      attach: "geometry",
      args: args
    }), children);
  });
}

var Box = create('box');
var Circle = create('circle');
var Cone = create('cone');
var Cylinder = create('cylinder');
var Sphere = create('sphere');
var Plane = create('plane');
var Tube = create('tube');
var Torus = create('torus');
var TorusKnot = create('torusKnot');
var Tetrahedron = create('tetrahedron');
var Ring = create('ring');
var Polyhedron = create('polyhedron');
var Icosahedron = create('icosahedron');
var Octahedron = create('octahedron');
var Dodecahedron = create('dodecahedron');
var Extrude = create('extrude');
var Lathe = create('lathe');
var Parametric = create('parametric');

var Billboard = /*#__PURE__*/React.forwardRef(function Billboard(_ref, ref) {
  var _ref$follow = _ref.follow,
      follow = _ref$follow === void 0 ? true : _ref$follow,
      _ref$lockX = _ref.lockX,
      lockX = _ref$lockX === void 0 ? false : _ref$lockX,
      _ref$lockY = _ref.lockY,
      lockY = _ref$lockY === void 0 ? false : _ref$lockY,
      _ref$lockZ = _ref.lockZ,
      lockZ = _ref$lockZ === void 0 ? false : _ref$lockZ,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["follow", "lockX", "lockY", "lockZ"]);

  var localRef = React.useRef();
  reactThreeFiber.useFrame(function (_ref2) {
    var camera = _ref2.camera;
    if (!follow) return;

    if (localRef.current) {
      var prev = {
        x: localRef.current.rotation.x,
        y: localRef.current.rotation.y,
        z: localRef.current.rotation.z
      };
      localRef.current.lookAt(camera.position); // readjust any axis that is locked

      if (lockX) localRef.current.rotation.x = prev.x;
      if (lockY) localRef.current.rotation.y = prev.y;
      if (lockZ) localRef.current.rotation.z = prev.z;
    }
  });
  return /*#__PURE__*/React.createElement(Plane, _extends__default['default']({
    ref: mergeRefs__default['default']([localRef, ref])
  }, props));
});

function useTexture(url) {
  return reactThreeFiber.useLoader(THREE.TextureLoader, url);
}

useTexture.preload = function (url) {
  return reactThreeFiber.useLoader.preload(THREE.TextureLoader, url);
};

function fixBinary(bin) {
  var length = bin.length;
  var buf = new ArrayBuffer(length);
  var arr = new Uint8Array(buf);

  for (var i = 0; i < length; i++) {
    arr[i] = bin.charCodeAt(i);
  }

  return buf;
} // polyfill for SSR as atob is not available - https://gist.github.com/jmshal/b14199f7402c8f3a4568733d8bed0f25


var atobPolyfill = function atobPolyfill(a) {
  return typeof window === 'undefined' ? Buffer.from(a, 'base64').toString('binary') : atob(a);
};

var createImageUrl = function createImageUrl(blob, type) {
  return URL.createObjectURL(new blobPolyfill.Blob([fixBinary(atobPolyfill(blob))], {
    type: type
  }));
};

var blob = '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';
var CloudImage = createImageUrl(blob, 'img/png');

function Cloud(_ref) {
  var _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.5 : _ref$opacity,
      _ref$speed = _ref.speed,
      speed = _ref$speed === void 0 ? 0.4 : _ref$speed,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? 10 : _ref$width,
      _ref$length = _ref.length,
      length = _ref$length === void 0 ? 1.5 : _ref$length,
      _ref$segments = _ref.segments,
      segments = _ref$segments === void 0 ? 20 : _ref$segments,
      _ref$dir = _ref.dir,
      dir = _ref$dir === void 0 ? 1 : _ref$dir,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["opacity", "speed", "width", "length", "segments", "dir"]);

  var group = React.useRef();
  var texture = useTexture(CloudImage);
  var clouds = React.useMemo(function () {
    return [].concat(new Array(segments)).map(function (_, index) {
      return {
        x: width / 2 - Math.random() * width,
        y: width / 2 - Math.random() * width,
        scale: 0.4 + Math.sin((index + 1) / segments * Math.PI) * ((0.2 + Math.random()) * 10),
        density: Math.max(0.2, Math.random()),
        rotation: Math.max(0.002, 0.005 * Math.random()) * speed
      };
    });
  }, [width, segments, speed]);
  reactThreeFiber.useFrame(function (state) {
    var _group$current;

    return (_group$current = group.current) == null ? void 0 : _group$current.children.forEach(function (cloud, index) {
      cloud.rotation.z += clouds[index].rotation * dir;
      cloud.scale.setScalar(clouds[index].scale + (1 + Math.sin(state.clock.getElapsedTime() / 10)) / 2 * index / 10);
    });
  });
  return /*#__PURE__*/React.createElement("group", props, /*#__PURE__*/React.createElement("group", {
    position: [0, 0, segments / 2 * length],
    ref: group
  }, clouds.map(function (_ref2, index) {
    var x = _ref2.x,
        y = _ref2.y,
        scale = _ref2.scale,
        density = _ref2.density;
    return /*#__PURE__*/React.createElement(Billboard, {
      key: index,
      scale: [scale, scale, scale],
      position: [x, y, -index * length],
      lockZ: true
    }, /*#__PURE__*/React.createElement("meshStandardMaterial", {
      map: texture,
      transparent: true,
      opacity: scale / 6 * density * opacity,
      depthTest: false
    }));
  })));
}

var Detailed = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var children = _ref.children,
      distances = _ref.distances,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["children", "distances"]);

  var lod = reactThreeFiber.useUpdate(function (lod) {
    lod.levels.length = 0;
    lod.children.forEach(function (object, index) {
      return lod.levels.push({
        object: object,
        distance: distances[index]
      });
    });
  }, []);
  reactThreeFiber.useFrame(function (state) {
    var _lod$current;

    return (_lod$current = lod.current) == null ? void 0 : _lod$current.update(state.camera);
  });
  return /*#__PURE__*/React.createElement("lOD", _extends__default['default']({
    ref: mergeRefs__default['default']([lod, ref])
  }, props), children);
});

var Line = /*#__PURE__*/React.forwardRef(function Line(_ref, ref) {
  var points = _ref.points,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? 'black' : _ref$color,
      vertexColors = _ref.vertexColors,
      lineWidth = _ref.lineWidth,
      dashed = _ref.dashed,
      rest = _objectWithoutPropertiesLoose__default['default'](_ref, ["points", "color", "vertexColors", "lineWidth", "dashed"]);

  var _React$useState = React.useState(function () {
    return new Line2.Line2();
  }),
      line2 = _React$useState[0];

  var _React$useState2 = React.useState(function () {
    return new LineMaterial.LineMaterial();
  }),
      lineMaterial = _React$useState2[0];

  var _React$useState3 = React.useState(function () {
    return new THREE.Vector2(512, 512);
  }),
      resolution = _React$useState3[0];

  var lineGeom = React.useMemo(function () {
    var geom = new LineGeometry.LineGeometry();
    var pValues = points.map(function (p) {
      return p instanceof THREE.Vector3 ? p.toArray() : p;
    });
    geom.setPositions(pValues.flat());

    if (vertexColors) {
      var cValues = vertexColors.map(function (c) {
        return c instanceof THREE.Color ? c.toArray() : c;
      });
      geom.setColors(cValues.flat());
    }

    return geom;
  }, [points, vertexColors]);
  React.useLayoutEffect(function () {
    line2.computeLineDistances();
  }, [points, line2]);
  React.useLayoutEffect(function () {
    if (dashed) {
      lineMaterial.defines.USE_DASH = '';
    } else {
      // Setting lineMaterial.defines.USE_DASH to undefined is apparently not sufficient.
      delete lineMaterial.defines.USE_DASH;
    }

    lineMaterial.needsUpdate = true;
  }, [dashed, lineMaterial]);
  return /*#__PURE__*/React.createElement("primitive", _extends__default['default']({
    dispose: undefined,
    object: line2,
    ref: ref
  }, rest), /*#__PURE__*/React.createElement("primitive", {
    dispose: undefined,
    object: lineGeom,
    attach: "geometry"
  }), /*#__PURE__*/React.createElement("primitive", _extends__default['default']({
    dispose: undefined,
    object: lineMaterial,
    attach: "material",
    color: color,
    vertexColors: Boolean(vertexColors),
    resolution: resolution,
    linewidth: lineWidth,
    dashed: dashed
  }, rest)));
});

var QuadraticBezierLine = /*#__PURE__*/React.forwardRef(function QuadraticBezierLine(_ref, ref) {
  var start = _ref.start,
      end = _ref.end,
      mid = _ref.mid,
      _ref$segments = _ref.segments,
      segments = _ref$segments === void 0 ? 20 : _ref$segments,
      rest = _objectWithoutPropertiesLoose__default['default'](_ref, ["start", "end", "mid", "segments"]);

  var points = React.useMemo(function () {
    var startV = start instanceof THREE.Vector3 ? start : _construct__default['default'](THREE.Vector3, start);
    var endV = end instanceof THREE.Vector3 ? end : _construct__default['default'](THREE.Vector3, end);
    var mid2 = mid || startV.clone().add(endV.clone().sub(startV)).add(new THREE.Vector3(0, startV.y - endV.y, 0));
    var midV = mid2 instanceof THREE.Vector3 ? mid2 : _construct__default['default'](THREE.Vector3, mid2);
    var interpolatedV = new THREE.QuadraticBezierCurve3(startV, midV, endV).getPoints(segments);
    return interpolatedV;
  }, [start, end, mid, segments]);
  return /*#__PURE__*/React.createElement(Line, _extends__default['default']({
    ref: ref,
    points: points
  }, rest));
});

var CubicBezierLine = /*#__PURE__*/React.forwardRef(function CubicBezierLine(_ref, ref) {
  var start = _ref.start,
      end = _ref.end,
      midA = _ref.midA,
      midB = _ref.midB,
      _ref$segments = _ref.segments,
      segments = _ref$segments === void 0 ? 20 : _ref$segments,
      rest = _objectWithoutPropertiesLoose__default['default'](_ref, ["start", "end", "midA", "midB", "segments"]);

  var points = React.useMemo(function () {
    var startV = start instanceof THREE.Vector3 ? start : _construct__default['default'](THREE.Vector3, start);
    var endV = end instanceof THREE.Vector3 ? end : _construct__default['default'](THREE.Vector3, end);
    var midAV = midA instanceof THREE.Vector3 ? midA : _construct__default['default'](THREE.Vector3, midA);
    var midBV = midB instanceof THREE.Vector3 ? midB : _construct__default['default'](THREE.Vector3, midB);
    var interpolatedV = new THREE.CubicBezierCurve3(startV, midAV, midBV, endV).getPoints(segments);
    return interpolatedV;
  }, [start, end, midA, midB, segments]);
  return /*#__PURE__*/React.createElement(Line, _extends__default['default']({
    ref: ref,
    points: points
  }, rest));
});

var PositionalAudio = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var url = _ref.url,
      _ref$distance = _ref.distance,
      distance = _ref$distance === void 0 ? 1 : _ref$distance,
      _ref$loop = _ref.loop,
      loop = _ref$loop === void 0 ? true : _ref$loop,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["url", "distance", "loop"]);

  var sound = React.useRef();

  var _useThree = reactThreeFiber.useThree(),
      camera = _useThree.camera;

  var _React$useState = React.useState(function () {
    return new THREE.AudioListener();
  }),
      listener = _React$useState[0];

  var buffer = reactThreeFiber.useLoader(THREE.AudioLoader, url);
  React.useEffect(function () {
    var _sound = sound.current;

    if (_sound) {
      _sound.setBuffer(buffer);

      _sound.setRefDistance(distance);

      _sound.setLoop(loop);

      _sound.play();
    }

    camera.add(listener);
    return function () {
      camera.remove(listener);

      if (_sound) {
        _sound.stop();

        _sound.disconnect();
      }
    };
  }, [buffer, camera, distance, listener, loop]);
  return /*#__PURE__*/React.createElement("positionalAudio", _extends__default['default']({
    ref: mergeRefs__default['default']([sound, ref]),
    args: [listener]
  }, props));
});

// eslint-disable-next-line prettier/prettier
var Text = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$anchorX = _ref.anchorX,
      anchorX = _ref$anchorX === void 0 ? 'center' : _ref$anchorX,
      _ref$anchorY = _ref.anchorY,
      anchorY = _ref$anchorY === void 0 ? 'middle' : _ref$anchorY,
      children = _ref.children,
      onSync = _ref.onSync,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["anchorX", "anchorY", "children", "onSync"]);

  var _useThree = reactThreeFiber.useThree(),
      invalidate = _useThree.invalidate;

  var _React$useState = React.useState(function () {
    return new troikaThreeText.Text();
  }),
      troikaMesh = _React$useState[0];

  var _React$useMemo = React.useMemo(function () {
    var n = [];
    var t = '';
    React.Children.forEach(children, function (child) {
      if (typeof child === 'string' || typeof child === 'number') {
        t += child;
      } else {
        n.push(child);
      }
    });
    return [n, t];
  }, [children]),
      nodes = _React$useMemo[0],
      text = _React$useMemo[1];

  React.useLayoutEffect(function () {
    return void troikaMesh.sync(function () {
      invalidate();
      if (onSync) onSync(troikaMesh);
    });
  });
  return /*#__PURE__*/React.createElement("primitive", _extends__default['default']({
    dispose: undefined,
    object: troikaMesh,
    ref: ref,
    text: text,
    anchorX: anchorX,
    anchorY: anchorY
  }, props), nodes);
});

var presetsObj = {
  sunset: 'venice_sunset_1k.hdr',
  dawn: 'kiara_1_dawn_1k.hdr',
  night: 'dikhololo_night_1k.hdr',
  warehouse: 'empty_warehouse_01_1k.hdr',
  forest: 'forest_slope_1k.hdr',
  apartment: 'lebombo_1k.hdr',
  studio: 'studio_small_03_1k.hdr',
  city: 'potsdamer_platz_1k.hdr',
  park: 'rooitou_park_1k.hdr',
  lobby: 'st_fagans_interior_1k.hdr'
};

function getTexture(texture, gen, isCubeMap) {
  if (isCubeMap) {
    gen.compileEquirectangularShader();
    return gen.fromCubemap(texture).texture;
  }

  return gen.fromEquirectangular(texture).texture;
}

var CUBEMAP_ROOT = 'https://rawcdn.githack.com/mattrossman/drei-assets/b597559ff62f85ec691df28cbea5ecb1263a2085';
function Environment(_ref) {
  var _ref$background = _ref.background,
      background = _ref$background === void 0 ? false : _ref$background,
      _ref$files = _ref.files,
      files = _ref$files === void 0 ? ['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png'] : _ref$files,
      _ref$path = _ref.path,
      path = _ref$path === void 0 ? '/' : _ref$path,
      _ref$preset = _ref.preset,
      preset = _ref$preset === void 0 ? undefined : _ref$preset,
      scene = _ref.scene;

  if (preset) {
    if (!(preset in presetsObj)) {
      throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));
    }

    files = presetsObj[preset];
    path = CUBEMAP_ROOT + '/hdri/';
  }

  var _useThree = reactThreeFiber.useThree(),
      gl = _useThree.gl,
      defaultScene = _useThree.scene;

  var isCubeMap = Array.isArray(files);
  var loader = isCubeMap ? THREE.CubeTextureLoader : RGBELoader.RGBELoader; // @ts-expect-error

  var loaderResult = reactThreeFiber.useLoader(loader, isCubeMap ? [files] : files, function (loader) {
    return loader.setPath(path);
  });
  var map = isCubeMap ? loaderResult[0] : loaderResult; // PMREMGenerator takes its sweet time to generate the env-map,
  // Let's make this part of suspense, or else it just yields a frame-skip

  var texture = useAsset.useAsset(function () {
    return new Promise(function (res) {
      var gen = new THREE.PMREMGenerator(gl);
      var texture = getTexture(map, gen, isCubeMap);
      gen.dispose();
      map.dispose();
      res(texture);
    });
  }, map);
  React.useLayoutEffect(function () {
    var oldbg = scene ? scene.background : defaultScene.background;
    var oldenv = scene ? scene.environment : defaultScene.environment;

    if (scene) {
      scene.environment = texture;

      if (background) {
        scene.background = texture;
      }
    } else {
      defaultScene.environment = texture;

      if (background) {
        defaultScene.background = texture;
      }
    }

    return function () {
      if (scene) {
        scene.environment = oldenv;
        scene.background = oldbg;
      } else {
        defaultScene.environment = oldenv;
        defaultScene.background = oldbg;
      }
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [texture, background, scene]);
  return null;
}

reactThreeFiber.extend({
  EffectComposer: EffectComposer.EffectComposer,
  RenderPass: RenderPass.RenderPass,
  ShaderPass: ShaderPass.ShaderPass
});
var isWebGL2Available = function isWebGL2Available() {
  try {
    var canvas = document.createElement('canvas');
    return !!(window.WebGL2RenderingContext && canvas.getContext('webgl2'));
  } catch (e) {
    return false;
  }
};
var Effects = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var children = _ref.children,
      _ref$multisamping = _ref.multisamping,
      multisamping = _ref$multisamping === void 0 ? 8 : _ref$multisamping,
      _ref$renderIndex = _ref.renderIndex,
      renderIndex = _ref$renderIndex === void 0 ? 1 : _ref$renderIndex,
      _ref$disableGamma = _ref.disableGamma,
      disableGamma = _ref$disableGamma === void 0 ? false : _ref$disableGamma,
      _ref$disableRenderPas = _ref.disableRenderPass,
      disableRenderPass = _ref$disableRenderPas === void 0 ? false : _ref$disableRenderPas,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["children", "multisamping", "renderIndex", "disableGamma", "disableRenderPass"]);

  var composer = React.useRef();

  var _useThree = reactThreeFiber.useThree(),
      scene = _useThree.scene,
      camera = _useThree.camera,
      gl = _useThree.gl,
      size = _useThree.size;

  var _React$useState = React.useState(function () {
    if (isWebGL2Available() && multisamping > 0) {
      var t = new THREE.WebGLMultisampleRenderTarget(size.width, size.height, {
        format: THREE.RGBAFormat,
        encoding: THREE.sRGBEncoding
      });
      t.samples = 8;
      return t;
    }
  }),
      target = _React$useState[0];

  React.useEffect(function () {
    var _composer$current, _composer$current2;

    (_composer$current = composer.current) == null ? void 0 : _composer$current.setSize(size.width, size.height);
    (_composer$current2 = composer.current) == null ? void 0 : _composer$current2.setPixelRatio(gl.getPixelRatio());
  }, [gl, size]);
  reactThreeFiber.useFrame(function () {
    var _composer$current3;

    return (_composer$current3 = composer.current) == null ? void 0 : _composer$current3.render();
  }, renderIndex);
  return /*#__PURE__*/React.createElement("effectComposer", _extends__default['default']({
    ref: mergeRefs__default['default']([ref, composer]),
    args: [gl, target]
  }, props), !disableRenderPass && /*#__PURE__*/React.createElement("renderPass", {
    attachArray: "passes",
    args: [scene, camera]
  }), !disableGamma && /*#__PURE__*/React.createElement("shaderPass", {
    attachArray: "passes",
    args: [GammaCorrectionShader.GammaCorrectionShader]
  }), children);
});

var OrthographicCamera = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$makeDefault = _ref.makeDefault,
      makeDefault = _ref$makeDefault === void 0 ? false : _ref$makeDefault,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["makeDefault"]);

  var _useThree = reactThreeFiber.useThree(),
      setDefaultCamera = _useThree.setDefaultCamera,
      camera = _useThree.camera,
      size = _useThree.size;

  var cameraRef = reactThreeFiber.useUpdate(function (cam) {
    return cam.updateProjectionMatrix();
  }, [size, props]);
  React.useLayoutEffect(function () {
    if (makeDefault && cameraRef.current) {
      var oldCam = camera;
      setDefaultCamera(cameraRef.current);
      return function () {
        return setDefaultCamera(oldCam);
      };
    }
  }, [camera, cameraRef, makeDefault, setDefaultCamera]);
  return /*#__PURE__*/React.createElement("orthographicCamera", _extends__default['default']({
    left: size.width / -2,
    right: size.width / 2,
    top: size.height / 2,
    bottom: size.height / -2,
    ref: mergeRefs__default['default']([cameraRef, ref])
  }, props));
});

var PerspectiveCamera = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$makeDefault = _ref.makeDefault,
      makeDefault = _ref$makeDefault === void 0 ? false : _ref$makeDefault,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["makeDefault"]);

  var _useThree = reactThreeFiber.useThree(),
      setDefaultCamera = _useThree.setDefaultCamera,
      camera = _useThree.camera,
      size = _useThree.size;

  var cameraRef = reactThreeFiber.useUpdate(function (cam) {
    cam.aspect = size.width / size.height;
    cam.updateProjectionMatrix();
  }, [size, props]);
  React.useLayoutEffect(function () {
    if (makeDefault && cameraRef.current) {
      var oldCam = camera;
      setDefaultCamera(cameraRef.current);
      return function () {
        return setDefaultCamera(oldCam);
      };
    }
  }, [camera, cameraRef, makeDefault, setDefaultCamera]);
  return /*#__PURE__*/React.createElement("perspectiveCamera", _extends__default['default']({
    ref: mergeRefs__default['default']([cameraRef, ref])
  }, props));
});

var CameraShake = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$intensity = _ref.intensity,
      intensity = _ref$intensity === void 0 ? 1 : _ref$intensity,
      decay = _ref.decay,
      _ref$decayRate = _ref.decayRate,
      decayRate = _ref$decayRate === void 0 ? 0.65 : _ref$decayRate,
      _ref$maxYaw = _ref.maxYaw,
      maxYaw = _ref$maxYaw === void 0 ? 0.1 : _ref$maxYaw,
      _ref$maxPitch = _ref.maxPitch,
      maxPitch = _ref$maxPitch === void 0 ? 0.1 : _ref$maxPitch,
      _ref$maxRoll = _ref.maxRoll,
      maxRoll = _ref$maxRoll === void 0 ? 0.1 : _ref$maxRoll,
      _ref$yawFrequency = _ref.yawFrequency,
      yawFrequency = _ref$yawFrequency === void 0 ? 1 : _ref$yawFrequency,
      _ref$pitchFrequency = _ref.pitchFrequency,
      pitchFrequency = _ref$pitchFrequency === void 0 ? 1 : _ref$pitchFrequency,
      _ref$rollFrequency = _ref.rollFrequency,
      rollFrequency = _ref$rollFrequency === void 0 ? 1 : _ref$rollFrequency,
      additive = _ref.additive;

  var _useThree = reactThreeFiber.useThree(),
      camera = _useThree.camera;

  var intensityRef = React.useRef(intensity);

  var _React$useState = React.useState(function () {
    return new SimplexNoise.SimplexNoise();
  }),
      yawNoise = _React$useState[0];

  var _React$useState2 = React.useState(function () {
    return new SimplexNoise.SimplexNoise();
  }),
      pitchNoise = _React$useState2[0];

  var _React$useState3 = React.useState(function () {
    return new SimplexNoise.SimplexNoise();
  }),
      rollNoise = _React$useState3[0];

  var constrainIntensity = function constrainIntensity() {
    if (intensityRef.current < 0 || intensityRef.current > 1) {
      intensityRef.current = intensityRef.current < 0 ? 0 : 1;
    }
  };

  React.useImperativeHandle(ref, function () {
    return {
      getIntensity: function getIntensity() {
        return intensityRef.current;
      },
      setIntensity: function setIntensity(val) {
        intensityRef.current = val;
        constrainIntensity();
      }
    };
  }, []);
  reactThreeFiber.useFrame(function (_ref2, delta) {
    var clock = _ref2.clock;
    var shake = Math.pow(intensityRef.current, 2);
    var yaw = maxYaw * shake * yawNoise.noise(clock.elapsedTime * yawFrequency, 1);
    var pitch = maxPitch * shake * pitchNoise.noise(clock.elapsedTime * pitchFrequency, 1);
    var roll = maxRoll * shake * rollNoise.noise(clock.elapsedTime * rollFrequency, 1);

    if (additive) {
      camera.rotation.x += pitch;
      camera.rotation.y += yaw;
      camera.rotation.z += roll;
    } else {
      camera.rotation.set(pitch, yaw, roll);
    }

    if (decay && intensityRef.current > 0) {
      intensityRef.current -= decayRate * delta;
      constrainIntensity();
    }
  });
  return null;
});

function CubeCamera(_ref) {
  var children = _ref.children,
      fog = _ref.fog,
      _ref$frames = _ref.frames,
      frames = _ref$frames === void 0 ? Infinity : _ref$frames,
      _ref$resolution = _ref.resolution,
      resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,
      _ref$near = _ref.near,
      near = _ref$near === void 0 ? 1 : _ref$near,
      _ref$far = _ref.far,
      far = _ref$far === void 0 ? 1000 : _ref$far,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["children", "fog", "frames", "resolution", "near", "far"]);

  var ref = React.useRef();

  var _React$useState = React.useState(),
      camera = _React$useState[0],
      setCamera = _React$useState[1];

  var _useThree = reactThreeFiber.useThree(),
      scene = _useThree.scene,
      gl = _useThree.gl;

  var fbo = React.useMemo(function () {
    return new THREE.WebGLCubeRenderTarget(resolution, {
      minFilter: THREE.LinearFilter,
      magFilter: THREE.LinearFilter,
      format: THREE.RGBFormat,
      encoding: gl.outputEncoding
    });
  }, [resolution]);
  var count = 0;
  reactThreeFiber.useFrame(function () {
    if (camera && ref.current && (frames === Infinity || count < frames)) {
      ref.current.traverse(function (obj) {
        return obj.visible = false;
      });
      var originalFog = scene.fog;
      scene.fog = fog != null ? fog : originalFog;
      camera.update(gl, scene);
      scene.fog = originalFog;
      ref.current.traverse(function (obj) {
        return obj.visible = true;
      });
      count++;
    }
  });
  return /*#__PURE__*/React.createElement("group", props, /*#__PURE__*/React.createElement("cubeCamera", {
    ref: setCamera,
    args: [near, far, fbo]
  }), /*#__PURE__*/React.createElement("group", {
    ref: ref
  }, children(fbo.texture)));
}

function call(ref, value) {
  if (typeof ref === 'function') ref(value);else if (ref != null) ref.current = value;
}

function useEffectfulState(fn, deps, cb) {
  if (deps === void 0) {
    deps = [];
  }

  var _React$useState = React.useState(),
      state = _React$useState[0],
      set = _React$useState[1];

  React.useLayoutEffect(function () {
    var value = fn();
    set(value);
    call(cb, value);
    return function () {
      return call(cb, null);
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, deps);
  return state;
}

var DeviceOrientationControls = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var camera = props.camera,
      rest = _objectWithoutPropertiesLoose__default['default'](props, ["camera"]);

  var _useThree = reactThreeFiber.useThree(),
      defaultCamera = _useThree.camera,
      invalidate = _useThree.invalidate;

  var explCamera = camera || defaultCamera;
  var controls = useEffectfulState(function () {
    if (explCamera) {
      return new DeviceOrientationControls$1.DeviceOrientationControls(explCamera);
    }
  }, [explCamera], ref);
  React.useEffect(function () {
    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);
    return function () {
      return controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);
    };
  }, [controls, invalidate]);
  reactThreeFiber.useFrame(function () {
    return controls == null ? void 0 : controls.update();
  });
  React.useEffect(function () {
    var current = controls;
    current == null ? void 0 : current.connect();
    return function () {
      return current == null ? void 0 : current.dispose();
    };
  }, [controls]);
  return controls ? /*#__PURE__*/React.createElement("primitive", _extends__default['default']({
    dispose: undefined,
    object: controls
  }, rest)) : null;
});

var FlyControls = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _useThree = reactThreeFiber.useThree(),
      camera = _useThree.camera,
      gl = _useThree.gl,
      invalidate = _useThree.invalidate;

  var controls = useEffectfulState(function () {
    return new FlyControls$1.FlyControls(camera, gl.domElement);
  }, [camera, gl.domElement], ref);
  React.useEffect(function () {
    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);
    return function () {
      return controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);
    };
  }, [controls, invalidate]);
  reactThreeFiber.useFrame(function (_, delta) {
    return controls == null ? void 0 : controls.update(delta);
  });
  return controls ? /*#__PURE__*/React.createElement("primitive", _extends__default['default']({
    dispose: undefined,
    object: controls
  }, props)) : null;
});

var MapControls = /*#__PURE__*/React.forwardRef(function (props, ref) {
  if (props === void 0) {
    props = {
      enableDamping: true
    };
  }

  var _props = props,
      camera = _props.camera,
      rest = _objectWithoutPropertiesLoose__default['default'](_props, ["camera"]);

  var _useThree = reactThreeFiber.useThree(),
      defaultCamera = _useThree.camera,
      gl = _useThree.gl,
      invalidate = _useThree.invalidate;

  var explCamera = camera || defaultCamera;
  var controls = useEffectfulState(function () {
    if (explCamera) {
      return new OrbitControls$1.MapControls(explCamera, gl.domElement);
    }
  }, [explCamera, gl], ref);
  reactThreeFiber.useFrame(function () {
    return controls == null ? void 0 : controls.update();
  });
  React.useEffect(function () {
    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);
    return function () {
      return controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);
    };
  }, [controls, invalidate]);
  return controls ? /*#__PURE__*/React.createElement("primitive", _extends__default['default']({
    dispose: undefined,
    object: controls,
    enableDamping: true
  }, rest)) : null;
});

var OrbitControls = /*#__PURE__*/React.forwardRef(function (props, ref) {
  if (props === void 0) {
    props = {
      enableDamping: true
    };
  }

  var _props = props,
      camera = _props.camera,
      rest = _objectWithoutPropertiesLoose__default['default'](_props, ["camera"]);

  var _useThree = reactThreeFiber.useThree(),
      defaultCamera = _useThree.camera,
      gl = _useThree.gl,
      invalidate = _useThree.invalidate;

  var explCamera = camera || defaultCamera;
  var controls = useEffectfulState(function () {
    if (explCamera) {
      return new OrbitControls$1.OrbitControls(explCamera, gl.domElement);
    }
  }, [explCamera, gl], ref);
  reactThreeFiber.useFrame(function () {
    return controls == null ? void 0 : controls.update();
  });
  React.useEffect(function () {
    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);
    return function () {
      return controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);
    };
  }, [controls, invalidate]);
  return controls ? /*#__PURE__*/React.createElement("primitive", _extends__default['default']({
    dispose: undefined,
    object: controls,
    enableDamping: true
  }, rest)) : null;
});

var TrackballControls = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var camera = props.camera,
      rest = _objectWithoutPropertiesLoose__default['default'](props, ["camera"]);

  var _useThree = reactThreeFiber.useThree(),
      defaultCamera = _useThree.camera,
      gl = _useThree.gl,
      invalidate = _useThree.invalidate;

  var explCamera = camera || defaultCamera;
  var controls = useEffectfulState(function () {
    if (explCamera) {
      return new TrackballControls$1.TrackballControls(explCamera, gl.domElement);
    }
  }, [explCamera, gl], ref);
  reactThreeFiber.useFrame(function () {
    return controls == null ? void 0 : controls.update();
  });
  React.useEffect(function () {
    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);
    return function () {
      return controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);
    };
  }, [controls, invalidate]);
  return controls ? /*#__PURE__*/React.createElement("primitive", _extends__default['default']({
    dispose: undefined,
    object: controls
  }, rest)) : null;
});

var TransformControls = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var children = _ref.children,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["children"]);

  var transformOnlyPropNames = ['enabled', 'axis', 'mode', 'translationSnap', 'rotationSnap', 'scaleSnap', 'space', 'size', 'dragging', 'showX', 'showY', 'showZ'];

  var camera = props.camera,
      rest = _objectWithoutPropertiesLoose__default['default'](props, ["camera"]);

  var transformProps = pick__default['default'](rest, transformOnlyPropNames);
  var objectProps = omit__default['default'](rest, transformOnlyPropNames);

  var _useThree = reactThreeFiber.useThree(),
      defaultCamera = _useThree.camera,
      gl = _useThree.gl,
      invalidate = _useThree.invalidate;

  var explCamera = camera || defaultCamera;
  var controls = useEffectfulState(function () {
    if (explCamera) {
      return new TransformControls$1.TransformControls(explCamera, gl.domElement);
    }
  }, [explCamera, gl.domElement], ref);
  var group = React.useRef();
  React.useLayoutEffect(function () {
    return void (controls == null ? void 0 : controls.attach(group.current));
  }, [children, controls]);
  React.useEffect(function () {
    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);
    return function () {
      return controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);
    };
  }, [controls, invalidate]);
  return controls ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("primitive", _extends__default['default']({
    dispose: undefined,
    object: controls
  }, transformProps)), /*#__PURE__*/React.createElement("group", _extends__default['default']({
    ref: group
  }, objectProps), children)) : null;
});

var PointerLockControls = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var selector = _ref.selector,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["selector"]);

  var camera = props.camera,
      rest = _objectWithoutPropertiesLoose__default['default'](props, ["camera"]);

  var _useThree = reactThreeFiber.useThree(),
      defaultCamera = _useThree.camera,
      gl = _useThree.gl,
      invalidate = _useThree.invalidate;

  var explCamera = camera || defaultCamera;
  var controls = useEffectfulState(function () {
    if (explCamera) {
      return new PointerLockControls$1.PointerLockControls(explCamera, gl.domElement);
    }
  }, [explCamera, gl.domElement], ref);
  React.useEffect(function () {
    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);
    return function () {
      return controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);
    };
  }, [controls, invalidate]);
  React.useEffect(function () {
    var handler = function handler() {
      return controls == null ? void 0 : controls.lock();
    };

    var element = selector ? document.querySelector(selector) : document;
    element && element.addEventListener('click', handler);
    return function () {
      return element ? element.removeEventListener('click', handler) : undefined;
    };
  }, [controls, selector]);
  return controls ? /*#__PURE__*/React.createElement("primitive", _extends__default['default']({
    dispose: undefined,
    object: controls
  }, rest)) : null;
});

function useCamera(camera, props) {
  var _useThree = reactThreeFiber.useThree(),
      mouse = _useThree.mouse;

  var _React$useState = React.useState(function () {
    var raycaster = new THREE.Raycaster();
    if (props) reactThreeFiber.applyProps(raycaster, props, {});
    return function (_, intersects) {
      raycaster.setFromCamera(mouse, camera instanceof THREE.Camera ? camera : camera.current);
      var rc = this.constructor.prototype.raycast.bind(this);
      if (rc) rc(raycaster, intersects);
    };
  }),
      raycast = _React$useState[0];

  return raycast;
}

var Context = /*#__PURE__*/React.createContext({});
var useGizmoContext = function useGizmoContext() {
  return React.useContext(Context);
};
var turnRate = 2 * Math.PI; // turn rate in angles per second

var dummy = new THREE.Object3D();
var matrix = new THREE.Matrix4();
var q1 = new THREE.Quaternion(),
    q2 = new THREE.Quaternion();
var target = new THREE.Vector3();
var targetPosition = new THREE.Vector3();
var targetQuaternion = new THREE.Quaternion();
var GizmoHelper = function GizmoHelper(_ref) {
  var _ref$alignment = _ref.alignment,
      alignment = _ref$alignment === void 0 ? 'bottom-right' : _ref$alignment,
      _ref$margin = _ref.margin,
      margin = _ref$margin === void 0 ? [80, 80] : _ref$margin,
      onUpdate = _ref.onUpdate,
      onTarget = _ref.onTarget,
      GizmoHelperComponent = _ref.children;

  var _useThree = reactThreeFiber.useThree(),
      gl = _useThree.gl,
      mainCamera = _useThree.camera,
      size = _useThree.size;

  var gizmoRef = React.useRef();
  var virtualCam = React.useRef(null);

  var _React$useState = React.useState(function () {
    return new THREE.Scene();
  }),
      virtualScene = _React$useState[0];

  var animating = React.useRef(false);
  var radius = React.useRef(0);
  var focusPoint = React.useRef(new THREE.Vector3(0, 0, 0));

  var tweenCamera = function tweenCamera(direction) {
    animating.current = true;
    focusPoint.current = onTarget();
    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation

    dummy.position.copy(target);
    dummy.lookAt(mainCamera.position);
    q1.copy(dummy.quaternion); // To new current camera orientation

    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);
    dummy.lookAt(targetPosition);
    q2.copy(dummy.quaternion);
  };

  var animateStep = function animateStep(delta) {
    if (!animating.current) return;
    var step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere

    q1.rotateTowards(q2, step);
    mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current); // animate orientation

    mainCamera.quaternion.rotateTowards(targetQuaternion, step);
    mainCamera.updateProjectionMatrix();
    onUpdate && onUpdate();

    if (q1.angleTo(q2) < 0.01) {
      animating.current = false;
    }
  };

  var beforeRender = function beforeRender() {
    var _gizmoRef$current;

    // Sync gizmo with main camera orientation
    matrix.copy(mainCamera.matrix).invert();
    (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix);
  };

  reactThreeFiber.useFrame(function (_, delta) {
    if (virtualCam.current && gizmoRef.current) {
      animateStep(delta);
      beforeRender();
      gl.autoClear = false;
      gl.clearDepth();
      gl.render(virtualScene, virtualCam.current);
    }
  });
  var gizmoHelperContext = {
    tweenCamera: tweenCamera,
    raycast: useCamera(virtualCam)
  }; // Position gizmo component within scene

  var marginX = margin[0],
      marginY = margin[1];
  var x = alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;
  var y = alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;
  return reactThreeFiber.createPortal( /*#__PURE__*/React.createElement(Context.Provider, {
    value: gizmoHelperContext
  }, /*#__PURE__*/React.createElement(OrthographicCamera, {
    ref: virtualCam,
    makeDefault: false,
    position: [0, 0, 100]
  }), /*#__PURE__*/React.createElement("group", {
    ref: gizmoRef,
    position: [x, y, 0]
  }, GizmoHelperComponent)), virtualScene);
};

var faces = ['right', 'left', 'top', 'bottom', 'front', 'back'];

var makePositionVector = function makePositionVector(xyz) {
  return _construct__default['default'](THREE.Vector3, xyz).multiplyScalar(0.38);
};

var corners = [[1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]].map(makePositionVector);
var cornerDimensions = [0.25, 0.25, 0.25];
var edges = [[1, 1, 0], [1, 0, 1], [1, 0, -1], [1, -1, 0], [0, 1, 1], [0, 1, -1], [0, -1, 1], [0, -1, -1], [-1, 1, 0], [-1, 0, 1], [-1, 0, -1], [-1, -1, 0]].map(makePositionVector);
var edgeDimensions = edges.map(function (edge) {
  return edge.toArray().map(function (axis) {
    return axis == 0 ? 0.5 : 0.25;
  });
});

var FaceMaterial = function FaceMaterial(_ref) {
  var hover = _ref.hover,
      index = _ref.index;
  var texture = React.useMemo(function () {
    var canvas = document.createElement('canvas');
    canvas.width = 128;
    canvas.height = 128;
    var context = canvas.getContext('2d');
    context.fillStyle = '#eee';
    context.fillRect(0, 0, canvas.width, canvas.height);
    context.strokeStyle = '#444';
    context.strokeRect(0, 0, canvas.width, canvas.height);
    context.font = '28px Arial';
    context.textAlign = 'center';
    context.fillStyle = '#222';
    context.fillText(faces[index].toUpperCase(), 64, 76);
    return new THREE.CanvasTexture(canvas);
  }, [index]);
  return /*#__PURE__*/React.createElement("meshLambertMaterial", {
    map: texture,
    attachArray: "material",
    color: hover ? 'hotpink' : 'white'
  });
};

var FaceCube = function FaceCube() {
  var _useGizmoContext = useGizmoContext(),
      tweenCamera = _useGizmoContext.tweenCamera,
      raycast = _useGizmoContext.raycast;

  var _React$useState = React.useState(null),
      hover = _React$useState[0],
      setHover = _React$useState[1];

  var handlePointerOut = function handlePointerOut(e) {
    setHover(null);
    e.stopPropagation();
  };

  var handlePointerDown = function handlePointerDown(e) {
    tweenCamera(e.face.normal);
    e.stopPropagation();
  };

  var handlePointerMove = function handlePointerMove(e) {
    setHover(Math.floor(e.faceIndex / 2));
    e.stopPropagation();
  };

  return /*#__PURE__*/React.createElement("mesh", {
    raycast: raycast,
    onPointerOut: handlePointerOut,
    onPointerMove: handlePointerMove,
    onPointerDown: handlePointerDown
  }, [].concat(Array(6)).map(function (_, index) {
    return /*#__PURE__*/React.createElement(FaceMaterial, {
      key: index,
      index: index,
      hover: hover === index
    });
  }), /*#__PURE__*/React.createElement("boxBufferGeometry", {
    attach: "geometry",
    args: [1, 1, 1]
  }));
};

var EdgeCube = function EdgeCube(_ref2) {
  var dimensions = _ref2.dimensions,
      position = _ref2.position;

  var _useGizmoContext2 = useGizmoContext(),
      tweenCamera = _useGizmoContext2.tweenCamera,
      raycast = _useGizmoContext2.raycast;

  var _React$useState2 = React.useState(false),
      hover = _React$useState2[0],
      setHover = _React$useState2[1];

  var handlePointerOut = function handlePointerOut(e) {
    setHover(false);
    e.stopPropagation();
  };

  var handlePointerOver = function handlePointerOver(e) {
    setHover(true);
    e.stopPropagation();
  };

  var handlePointerDown = function handlePointerDown(e) {
    tweenCamera(position);
    e.stopPropagation();
  };

  return /*#__PURE__*/React.createElement("mesh", {
    position: position,
    raycast: raycast,
    onPointerOver: handlePointerOver,
    onPointerOut: handlePointerOut,
    onPointerDown: handlePointerDown
  }, /*#__PURE__*/React.createElement("meshBasicMaterial", {
    color: hover ? 'hotpink' : 'white',
    transparent: true,
    opacity: 0.75,
    visible: hover
  }), /*#__PURE__*/React.createElement("boxBufferGeometry", {
    attach: "geometry",
    args: dimensions
  }));
};

var GizmoViewcube = function GizmoViewcube() {
  return /*#__PURE__*/React.createElement("group", {
    scale: [60, 60, 60]
  }, /*#__PURE__*/React.createElement(FaceCube, null), edges.map(function (edge, index) {
    return /*#__PURE__*/React.createElement(EdgeCube, {
      key: index,
      position: edge,
      dimensions: edgeDimensions[index]
    });
  }), corners.map(function (corner, index) {
    return /*#__PURE__*/React.createElement(EdgeCube, {
      key: index,
      position: corner,
      dimensions: cornerDimensions
    });
  }), /*#__PURE__*/React.createElement("ambientLight", {
    intensity: 0.5
  }), /*#__PURE__*/React.createElement("pointLight", {
    position: [10, 10, 10],
    intensity: 0.5
  }));
};

function Axis(_ref) {
  var color = _ref.color,
      rotation = _ref.rotation;
  return /*#__PURE__*/React.createElement("group", {
    rotation: rotation
  }, /*#__PURE__*/React.createElement("mesh", {
    position: [0.4, 0, 0]
  }, /*#__PURE__*/React.createElement("boxGeometry", {
    args: [0.8, 0.05, 0.05]
  }), /*#__PURE__*/React.createElement("meshBasicMaterial", {
    color: color,
    toneMapped: false
  })));
}

function AxisHead(_ref2) {
  var arcStyle = _ref2.arcStyle,
      label = _ref2.label,
      labelColor = _ref2.labelColor,
      props = _objectWithoutPropertiesLoose__default['default'](_ref2, ["arcStyle", "label", "labelColor"]);

  var texture = React.useMemo(function () {
    var canvas = document.createElement('canvas');
    canvas.width = 64;
    canvas.height = 64;
    var context = canvas.getContext('2d');
    context.beginPath();
    context.arc(32, 32, 16, 0, 2 * Math.PI);
    context.closePath();
    context.fillStyle = arcStyle;
    context.fill();

    if (label) {
      context.font = '24px Arial';
      context.textAlign = 'center';
      context.fillStyle = labelColor;
      context.fillText(label, 32, 41);
    }

    return new THREE.CanvasTexture(canvas);
  }, [arcStyle, label, labelColor]);

  var _React$useState = React.useState(false),
      active = _React$useState[0],
      setActive = _React$useState[1];

  var scale = (label ? 1 : 0.75) * (active ? 1.2 : 1);

  var handlePointerOver = function handlePointerOver(e) {
    setActive(true);
    e.stopPropagation();
  };

  var handlePointerOut = function handlePointerOut(e) {
    setActive(false);
    e.stopPropagation();
  };

  return /*#__PURE__*/React.createElement("sprite", _extends__default['default']({
    scale: [scale, scale, scale],
    onPointerOver: handlePointerOver,
    onPointerOut: handlePointerOut
  }, props), /*#__PURE__*/React.createElement("spriteMaterial", {
    map: texture,
    alphaTest: 0.3,
    opacity: label ? 1 : 0.75,
    toneMapped: false
  }));
}

var GizmoViewport = function GizmoViewport(_ref3) {
  var _ref3$axisColors = _ref3.axisColors,
      axisColors = _ref3$axisColors === void 0 ? ['#ff3653', '#8adb00', '#2c8fff'] : _ref3$axisColors,
      _ref3$labelColor = _ref3.labelColor,
      labelColor = _ref3$labelColor === void 0 ? '#000' : _ref3$labelColor,
      props = _objectWithoutPropertiesLoose__default['default'](_ref3, ["axisColors", "labelColor"]);

  var colorX = axisColors[0],
      colorY = axisColors[1],
      colorZ = axisColors[2];

  var _useGizmoContext = useGizmoContext(),
      tweenCamera = _useGizmoContext.tweenCamera,
      raycast = _useGizmoContext.raycast;

  var axisHeadProps = {
    labelColor: labelColor,
    onPointerDown: function onPointerDown(e) {
      tweenCamera(e.object.position);
      e.stopPropagation();
    },
    raycast: raycast
  };
  return /*#__PURE__*/React.createElement("group", _extends__default['default']({
    scale: [40, 40, 40]
  }, props), /*#__PURE__*/React.createElement(Axis, {
    color: colorX,
    rotation: [0, 0, 0]
  }), /*#__PURE__*/React.createElement(Axis, {
    color: colorY,
    rotation: [0, 0, Math.PI / 2]
  }), /*#__PURE__*/React.createElement(Axis, {
    color: colorZ,
    rotation: [0, -Math.PI / 2, 0]
  }), /*#__PURE__*/React.createElement(AxisHead, _extends__default['default']({
    arcStyle: colorX,
    position: [1, 0, 0],
    label: "X"
  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends__default['default']({
    arcStyle: colorY,
    position: [0, 1, 0],
    label: "Y"
  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends__default['default']({
    arcStyle: colorZ,
    position: [0, 0, 1],
    label: "Z"
  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends__default['default']({
    arcStyle: colorX,
    position: [-1, 0, 0]
  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends__default['default']({
    arcStyle: colorY,
    position: [0, -1, 0]
  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends__default['default']({
    arcStyle: colorZ,
    position: [0, 0, -1]
  }, axisHeadProps)), /*#__PURE__*/React.createElement("ambientLight", {
    intensity: 0.5
  }), /*#__PURE__*/React.createElement("pointLight", {
    position: [10, 10, 10],
    intensity: 0.5
  }));
};

function useCubeTexture(files, _ref) {
  var path = _ref.path;

  // @ts-ignore
  var _useLoader = reactThreeFiber.useLoader( // @ts-ignore
  THREE.CubeTextureLoader, [files], function (loader) {
    return loader.setPath(path);
  }),
      cubeTexture = _useLoader[0];

  return cubeTexture;
}

useCubeTexture.preload = function (files, _ref2) {
  var path = _ref2.path;
  return reactThreeFiber.useLoader.preload( // @ts-ignore
  THREE.CubeTextureLoader, [files], function (loader) {
    return loader.setPath(path);
  });
};

function useFBX(path) {
  return reactThreeFiber.useLoader(FBXLoader.FBXLoader, path);
}

useFBX.preload = function (path) {
  return reactThreeFiber.useLoader.preload(FBXLoader.FBXLoader, path);
};

function extensions(useDraco, useMeshopt) {
  return function (loader) {
    if (useDraco) {
      var dracoLoader = new DRACOLoader.DRACOLoader();
      dracoLoader.setDecoderPath(typeof useDraco === 'string' ? useDraco : 'https://www.gstatic.com/draco/v1/decoders/');
      loader.setDRACOLoader(dracoLoader);
    }

    if (useMeshopt) {
      loader.setMeshoptDecoder(meshopt_decoder_module_js.MeshoptDecoder);
    }
  };
}

function useGLTF(path, useDraco, useMeshOpt) {
  if (useDraco === void 0) {
    useDraco = true;
  }

  if (useMeshOpt === void 0) {
    useMeshOpt = true;
  }

  var gltf = reactThreeFiber.useLoader(GLTFLoader.GLTFLoader, path, extensions(useDraco, useMeshOpt));
  return gltf;
}

useGLTF.preload = function (path, useDraco, useMeshOpt) {
  if (useDraco === void 0) {
    useDraco = true;
  }

  if (useMeshOpt === void 0) {
    useMeshOpt = true;
  }

  return reactThreeFiber.useLoader.preload(GLTFLoader.GLTFLoader, path, extensions(useDraco, useMeshOpt));
};

var _inverseMatrix = new THREE.Matrix4();

var _ray = new THREE.Ray();

var _sphere = new THREE.Sphere();

var _vA = new THREE.Vector3();

function meshBounds(raycaster, intersects) {
  var geometry = this.geometry;
  var material = this.material;
  var matrixWorld = this.matrixWorld;
  if (material === undefined) return; // Checking boundingSphere distance to ray

  if (geometry.boundingSphere === null) geometry.computeBoundingSphere();

  _sphere.copy(geometry.boundingSphere);

  _sphere.applyMatrix4(matrixWorld);

  if (raycaster.ray.intersectsSphere(_sphere) === false) return;

  _inverseMatrix.copy(matrixWorld).invert();

  _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix); // Check boundingBox before continuing


  if (geometry.boundingBox !== null && _ray.intersectBox(geometry.boundingBox, _vA) === null) return;
  intersects.push({
    distance: _vA.distanceTo(raycaster.ray.origin),
    point: _vA.clone(),
    object: this
  });
}

var ConvolutionMaterial = /*#__PURE__*/function (_ShaderMaterial) {
  _inheritsLoose__default['default'](ConvolutionMaterial, _ShaderMaterial);

  function ConvolutionMaterial(texelSize) {
    var _this;

    if (texelSize === void 0) {
      texelSize = new THREE.Vector2();
    }

    _this = _ShaderMaterial.call(this, {
      uniforms: {
        inputBuffer: new THREE.Uniform(null),
        depthBuffer: new THREE.Uniform(null),
        resolution: new THREE.Uniform(new THREE.Vector2()),
        texelSize: new THREE.Uniform(new THREE.Vector2()),
        halfTexelSize: new THREE.Uniform(new THREE.Vector2()),
        kernel: new THREE.Uniform(0.0),
        scale: new THREE.Uniform(1.0),
        cameraNear: new THREE.Uniform(0.0),
        cameraFar: new THREE.Uniform(1.0),
        minDepthThreshold: new THREE.Uniform(0.0),
        maxDepthThreshold: new THREE.Uniform(1.0),
        depthScale: new THREE.Uniform(0.0),
        depthToBlurRatioBias: new THREE.Uniform(0.25)
      },
      fragmentShader: "#include <common>\n        #include <dithering_pars_fragment>      \n        uniform sampler2D inputBuffer;\n        uniform sampler2D depthBuffer;\n        uniform float cameraNear;\n        uniform float cameraFar;\n        uniform float minDepthThreshold;\n        uniform float maxDepthThreshold;\n        uniform float depthScale;\n        uniform float depthToBlurRatioBias;\n        varying vec2 vUv;\n        varying vec2 vUv0;\n        varying vec2 vUv1;\n        varying vec2 vUv2;\n        varying vec2 vUv3;\n\n        void main() {\n          float depthFactor = 0.0;\n          \n          #ifdef USE_DEPTH\n            vec4 depth = texture2D(depthBuffer, vUv);\n            depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));\n            depthFactor *= depthScale;\n            depthFactor = max(0.0, min(1.0, depthFactor + 0.25));\n          #endif\n          \n          vec4 sum = texture2D(inputBuffer, mix(vUv0, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv1, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv2, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv3, vUv, depthFactor));\n          gl_FragColor = sum * 0.25 ;\n\n          #include <dithering_fragment>\n        }",
      vertexShader: "uniform vec2 texelSize;\n        uniform vec2 halfTexelSize;\n        uniform float kernel;\n        uniform float scale;\n        varying vec2 vUv;\n        varying vec2 vUv0;\n        varying vec2 vUv1;\n        varying vec2 vUv2;\n        varying vec2 vUv3;\n\n        void main() {\n          vec2 uv = position.xy * 0.5 + 0.5;\n          vUv = uv;\n\n          vec2 dUv = (texelSize * vec2(kernel) + halfTexelSize) * scale;\n          vUv0 = vec2(uv.x - dUv.x, uv.y + dUv.y);\n          vUv1 = vec2(uv.x + dUv.x, uv.y + dUv.y);\n          vUv2 = vec2(uv.x + dUv.x, uv.y - dUv.y);\n          vUv3 = vec2(uv.x - dUv.x, uv.y - dUv.y);\n\n          gl_Position = vec4(position.xy, 1.0, 1.0);\n        }",
      blending: THREE.NoBlending,
      depthWrite: false,
      depthTest: false
    }) || this;

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "kernel", void 0);

    _this.toneMapped = false;

    _this.setTexelSize(texelSize.x, texelSize.y);

    _this.kernel = new Float32Array([0.0, 1.0, 2.0, 2.0, 3.0]);
    return _this;
  }

  var _proto = ConvolutionMaterial.prototype;

  _proto.setTexelSize = function setTexelSize(x, y) {
    this.uniforms.texelSize.value.set(x, y);
    this.uniforms.halfTexelSize.value.set(x, y).multiplyScalar(0.5);
  };

  _proto.setResolution = function setResolution(resolution) {
    this.uniforms.resolution.value.copy(resolution);
  };

  return ConvolutionMaterial;
}(THREE.ShaderMaterial);

var BlurPass = /*#__PURE__*/function () {
  function BlurPass(_ref) {
    var gl = _ref.gl,
        resolution = _ref.resolution,
        _ref$width = _ref.width,
        width = _ref$width === void 0 ? 500 : _ref$width,
        _ref$height = _ref.height,
        height = _ref$height === void 0 ? 500 : _ref$height,
        _ref$minDepthThreshol = _ref.minDepthThreshold,
        minDepthThreshold = _ref$minDepthThreshol === void 0 ? 0 : _ref$minDepthThreshol,
        _ref$maxDepthThreshol = _ref.maxDepthThreshold,
        maxDepthThreshold = _ref$maxDepthThreshol === void 0 ? 1 : _ref$maxDepthThreshol,
        _ref$depthScale = _ref.depthScale,
        depthScale = _ref$depthScale === void 0 ? 0 : _ref$depthScale,
        _ref$depthToBlurRatio = _ref.depthToBlurRatioBias,
        depthToBlurRatioBias = _ref$depthToBlurRatio === void 0 ? 0.25 : _ref$depthToBlurRatio;

    _defineProperty__default['default'](this, "renderTargetA", void 0);

    _defineProperty__default['default'](this, "renderTargetB", void 0);

    _defineProperty__default['default'](this, "convolutionMaterial", void 0);

    _defineProperty__default['default'](this, "scene", void 0);

    _defineProperty__default['default'](this, "camera", void 0);

    _defineProperty__default['default'](this, "screen", void 0);

    _defineProperty__default['default'](this, "renderToScreen", false);

    this.renderTargetA = new THREE.WebGLRenderTarget(resolution, resolution, {
      minFilter: THREE.LinearFilter,
      magFilter: THREE.LinearFilter,
      stencilBuffer: false,
      depthBuffer: false,
      encoding: gl.outputEncoding
    });
    this.renderTargetB = this.renderTargetA.clone();
    this.convolutionMaterial = new ConvolutionMaterial();
    this.convolutionMaterial.setTexelSize(1.0 / width, 1.0 / height);
    this.convolutionMaterial.setResolution(new THREE.Vector2(width, height));
    this.scene = new THREE.Scene();
    this.camera = new THREE.Camera();
    this.convolutionMaterial.uniforms.minDepthThreshold.value = minDepthThreshold;
    this.convolutionMaterial.uniforms.maxDepthThreshold.value = maxDepthThreshold;
    this.convolutionMaterial.uniforms.depthScale.value = depthScale;
    this.convolutionMaterial.uniforms.depthToBlurRatioBias.value = depthToBlurRatioBias;
    this.convolutionMaterial.defines.USE_DEPTH = depthScale > 0;
    var vertices = new Float32Array([-1, -1, 0, 3, -1, 0, -1, 3, 0]);
    var uvs = new Float32Array([0, 0, 2, 0, 0, 2]);
    var geometry = new THREE.BufferGeometry();
    geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));
    geometry.setAttribute('uv', new THREE.BufferAttribute(uvs, 2));
    this.screen = new THREE.Mesh(geometry, this.convolutionMaterial);
    this.screen.frustumCulled = false;
    this.scene.add(this.screen);
  }

  var _proto = BlurPass.prototype;

  _proto.render = function render(renderer, inputBuffer, outputBuffer) {
    var scene = this.scene;
    var camera = this.camera;
    var renderTargetA = this.renderTargetA;
    var renderTargetB = this.renderTargetB;
    var material = this.convolutionMaterial;
    var uniforms = material.uniforms;
    uniforms.depthBuffer.value = inputBuffer.depthTexture;
    var kernel = material.kernel;
    var lastRT = inputBuffer;
    var destRT;
    var i, l; // Apply the multi-pass blur.

    for (i = 0, l = kernel.length - 1; i < l; ++i) {
      // Alternate between targets.
      destRT = (i & 1) === 0 ? renderTargetA : renderTargetB;
      uniforms.kernel.value = kernel[i];
      uniforms.inputBuffer.value = lastRT.texture;
      renderer.setRenderTarget(destRT);
      renderer.render(scene, camera);
      lastRT = destRT;
    }

    uniforms.kernel.value = kernel[i];
    uniforms.inputBuffer.value = lastRT.texture;
    renderer.setRenderTarget(this.renderToScreen ? null : outputBuffer);
    renderer.render(scene, camera);
  };

  return BlurPass;
}();

var MeshReflectorMaterial = /*#__PURE__*/function (_MeshStandardMaterial) {
  _inheritsLoose__default['default'](MeshReflectorMaterial, _MeshStandardMaterial);

  function MeshReflectorMaterial(parameters) {
    var _this;

    if (parameters === void 0) {
      parameters = {};
    }

    _this = _MeshStandardMaterial.call(this, parameters) || this;

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_debug", {
      value: 0
    });

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_tDepth", {
      value: null
    });

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_distortionMap", {
      value: null
    });

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_tDiffuse", {
      value: null
    });

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_tDiffuseBlur", {
      value: null
    });

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_textureMatrix", {
      value: null
    });

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_hasBlur", {
      value: false
    });

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_mirror", {
      value: 0.0
    });

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_mixBlur", {
      value: 0.0
    });

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_blurStrength", {
      value: 0.5
    });

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_minDepthThreshold", {
      value: 0.9
    });

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_maxDepthThreshold", {
      value: 1
    });

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_depthScale", {
      value: 0
    });

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_depthToBlurRatioBias", {
      value: 0.25
    });

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_distortion", {
      value: 1
    });

    _this.setValues(parameters);

    return _this;
  }

  var _proto = MeshReflectorMaterial.prototype;

  _proto.onBeforeCompile = function onBeforeCompile(shader) {
    var _shader$defines;

    if (!((_shader$defines = shader.defines) == null ? void 0 : _shader$defines.USE_UV)) {
      shader.defines.USE_UV = '';
    }

    shader.uniforms.debug = this._debug;
    shader.uniforms.hasBlur = this._hasBlur;
    shader.uniforms.tDiffuse = this._tDiffuse;
    shader.uniforms.tDepth = this._tDepth;
    shader.uniforms.distortionMap = this._distortionMap;
    shader.uniforms.tDiffuseBlur = this._tDiffuseBlur;
    shader.uniforms.textureMatrix = this._textureMatrix;
    shader.uniforms.mirror = this._mirror;
    shader.uniforms.mixBlur = this._mixBlur;
    shader.uniforms.mixStrength = this._blurStrength;
    shader.uniforms.minDepthThreshold = this._minDepthThreshold;
    shader.uniforms.maxDepthThreshold = this._maxDepthThreshold;
    shader.uniforms.depthScale = this._depthScale;
    shader.uniforms.depthToBlurRatioBias = this._depthToBlurRatioBias;
    shader.uniforms.distortion = this._distortion;
    shader.vertexShader = "\n        uniform mat4 textureMatrix;\n        varying vec4 my_vUv;     \n      " + shader.vertexShader;
    shader.vertexShader = shader.vertexShader.replace('#include <project_vertex>', "#include <project_vertex>\n        my_vUv = textureMatrix * vec4( position, 1.0 );\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );");
    shader.fragmentShader = "\n        uniform int debug;\n        uniform sampler2D tDiffuse;\n        uniform sampler2D tDiffuseBlur;\n        uniform sampler2D tDepth;\n        uniform sampler2D distortionMap;\n        uniform float distortion;\n        uniform float cameraNear;\n\t\t\t  uniform float cameraFar;\n        uniform bool hasBlur;\n        uniform float mixBlur;\n        uniform float mirror;\n        uniform float mixStrength;\n        uniform float minDepthThreshold;\n        uniform float maxDepthThreshold;\n        uniform float depthScale;\n        uniform float depthToBlurRatioBias;\n        varying vec4 my_vUv;        \n        " + shader.fragmentShader;
    shader.fragmentShader = shader.fragmentShader.replace('#include <emissivemap_fragment>', "#include <emissivemap_fragment>\n    \n      float distortionFactor = 0.0;\n      #ifdef USE_DISTORTION\n        distortionFactor = texture2D(distortionMap, vUv).r * distortion;\n      #endif\n\n      vec4 new_vUv = my_vUv;\n      new_vUv.x += distortionFactor;\n      new_vUv.y += distortionFactor;\n\n      vec4 base = texture2DProj(tDiffuse, new_vUv);\n      vec4 blur = texture2DProj(tDiffuseBlur, new_vUv);\n      \n      vec4 merge = base;\n      \n      #ifdef USE_NORMALMAP\n        vec2 normal_uv = vec2(0.0);\n        vec4 normalColor = texture2D(normalMap, vUv * normalScale);\n        vec3 my_normal = normalize( vec3( normalColor.r * 2.0 - 1.0, normalColor.b,  normalColor.g * 2.0 - 1.0 ) );\n        vec3 coord = new_vUv.xyz / new_vUv.w;\n        normal_uv = coord.xy + coord.z * my_normal.xz * 0.05;\n        vec4 base_normal = texture2D(tDiffuse, normal_uv);\n        vec4 blur_normal = texture2D(tDiffuseBlur, normal_uv);\n        merge = base_normal;\n        blur = blur_normal;\n      #endif\n\n      float depthFactor = 0.0001;\n      float blurFactor = 0.0;\n\n      #ifdef USE_DEPTH\n        vec4 depth = texture2DProj(tDepth, new_vUv);\n        depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));\n        depthFactor *= depthScale;\n        depthFactor = max(0.0001, min(1.0, depthFactor));\n\n        #ifdef USE_BLUR\n          blur = blur * min(1.0, depthFactor + depthToBlurRatioBias);\n          merge = merge * min(1.0, depthFactor + 0.5);;\n        #else\n          merge = merge * depthFactor;\n        #endif\n  \n      #endif\n\n      float reflectorRoughnessFactor = roughness;\n      #ifdef USE_ROUGHNESSMAP\n        vec4 reflectorTexelRoughness = texture2D( roughnessMap, vUv );\n        reflectorRoughnessFactor *= reflectorTexelRoughness.g;\n      #endif\n      \n      #ifdef USE_BLUR\n        blurFactor = min(1.0, mixBlur * reflectorRoughnessFactor);\n        merge = mix(merge, blur, blurFactor);\n      #endif\n\n      diffuseColor.rgb = diffuseColor.rgb * ((1.0 - min(1.0, mirror)) + merge.rgb * mixStrength);           \n      diffuseColor = sRGBToLinear(diffuseColor);\n      \n      if (debug == 1) {\n        diffuseColor = sRGBToLinear(vec4(vec3(depthFactor), 1.0));\n      }\n      if (debug == 2) {\n        diffuseColor = sRGBToLinear(vec4(vec3(blurFactor), 1.0));\n      }\n      if (debug == 3) {\n        diffuseColor = sRGBToLinear(texture2DProj(tDiffuse, new_vUv));\n      }\n      if (debug == 4) {\n        diffuseColor = sRGBToLinear(texture2DProj(tDiffuseBlur, new_vUv));\n      }\n      ");
  };

  _createClass__default['default'](MeshReflectorMaterial, [{
    key: "tDiffuse",
    get: function get() {
      return this._tDiffuse.value;
    },
    set: function set(v) {
      this._tDiffuse.value = v;
    }
  }, {
    key: "tDepth",
    get: function get() {
      return this._tDepth.value;
    },
    set: function set(v) {
      this._tDepth.value = v;
    }
  }, {
    key: "distortionMap",
    get: function get() {
      return this._distortionMap.value;
    },
    set: function set(v) {
      this._distortionMap.value = v;
    }
  }, {
    key: "tDiffuseBlur",
    get: function get() {
      return this._tDiffuseBlur.value;
    },
    set: function set(v) {
      this._tDiffuseBlur.value = v;
    }
  }, {
    key: "textureMatrix",
    get: function get() {
      return this._textureMatrix.value;
    },
    set: function set(v) {
      this._textureMatrix.value = v;
    }
  }, {
    key: "hasBlur",
    get: function get() {
      return this._hasBlur.value;
    },
    set: function set(v) {
      this._hasBlur.value = v;
    }
  }, {
    key: "mirror",
    get: function get() {
      return this._mirror.value;
    },
    set: function set(v) {
      this._mirror.value = v;
    }
  }, {
    key: "mixBlur",
    get: function get() {
      return this._mixBlur.value;
    },
    set: function set(v) {
      this._mixBlur.value = v;
    }
  }, {
    key: "mixStrength",
    get: function get() {
      return this._blurStrength.value;
    },
    set: function set(v) {
      this._blurStrength.value = v;
    }
  }, {
    key: "minDepthThreshold",
    get: function get() {
      return this._minDepthThreshold.value;
    },
    set: function set(v) {
      this._minDepthThreshold.value = v;
    }
  }, {
    key: "maxDepthThreshold",
    get: function get() {
      return this._maxDepthThreshold.value;
    },
    set: function set(v) {
      this._maxDepthThreshold.value = v;
    }
  }, {
    key: "depthScale",
    get: function get() {
      return this._depthScale.value;
    },
    set: function set(v) {
      this._depthScale.value = v;
    }
  }, {
    key: "debug",
    get: function get() {
      return this._debug.value;
    },
    set: function set(v) {
      this._debug.value = v;
    }
  }, {
    key: "depthToBlurRatioBias",
    get: function get() {
      return this._depthToBlurRatioBias.value;
    },
    set: function set(v) {
      this._depthToBlurRatioBias.value = v;
    }
  }, {
    key: "distortion",
    get: function get() {
      return this._distortion.value;
    },
    set: function set(v) {
      this._distortion.value = v;
    }
  }]);

  return MeshReflectorMaterial;
}(THREE.MeshStandardMaterial);

reactThreeFiber.extend({
  MeshReflectorMaterial: MeshReflectorMaterial
});
var Reflector = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$mixBlur = _ref.mixBlur,
      mixBlur = _ref$mixBlur === void 0 ? 0.0 : _ref$mixBlur,
      _ref$mixStrength = _ref.mixStrength,
      mixStrength = _ref$mixStrength === void 0 ? 0.5 : _ref$mixStrength,
      _ref$resolution = _ref.resolution,
      resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,
      _ref$blur = _ref.blur,
      blur = _ref$blur === void 0 ? [0, 0] : _ref$blur,
      _ref$args = _ref.args,
      args = _ref$args === void 0 ? [1, 1] : _ref$args,
      _ref$minDepthThreshol = _ref.minDepthThreshold,
      minDepthThreshold = _ref$minDepthThreshol === void 0 ? 0.9 : _ref$minDepthThreshol,
      _ref$maxDepthThreshol = _ref.maxDepthThreshold,
      maxDepthThreshold = _ref$maxDepthThreshol === void 0 ? 1 : _ref$maxDepthThreshol,
      _ref$depthScale = _ref.depthScale,
      depthScale = _ref$depthScale === void 0 ? 0 : _ref$depthScale,
      _ref$depthToBlurRatio = _ref.depthToBlurRatioBias,
      depthToBlurRatioBias = _ref$depthToBlurRatio === void 0 ? 0.25 : _ref$depthToBlurRatio,
      mirror = _ref.mirror,
      children = _ref.children,
      _ref$debug = _ref.debug,
      debug = _ref$debug === void 0 ? 0 : _ref$debug,
      _ref$distortion = _ref.distortion,
      distortion = _ref$distortion === void 0 ? 1 : _ref$distortion,
      distortionMap = _ref.distortionMap,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["mixBlur", "mixStrength", "resolution", "blur", "args", "minDepthThreshold", "maxDepthThreshold", "depthScale", "depthToBlurRatioBias", "mirror", "children", "debug", "distortion", "distortionMap"]);

  blur = Array.isArray(blur) ? blur : [blur, blur];
  var hasBlur = blur[0] + blur[1] > 0;
  var meshRef = React.useRef(null);

  var _React$useState = React.useState(function () {
    return new THREE.Plane();
  }),
      reflectorPlane = _React$useState[0];

  var _React$useState2 = React.useState(function () {
    return new THREE.Vector3();
  }),
      normal = _React$useState2[0];

  var _React$useState3 = React.useState(function () {
    return new THREE.Vector3();
  }),
      reflectorWorldPosition = _React$useState3[0];

  var _React$useState4 = React.useState(function () {
    return new THREE.Vector3();
  }),
      cameraWorldPosition = _React$useState4[0];

  var _React$useState5 = React.useState(function () {
    return new THREE.Matrix4();
  }),
      rotationMatrix = _React$useState5[0];

  var _React$useState6 = React.useState(function () {
    return new THREE.Vector3(0, 0, -1);
  }),
      lookAtPosition = _React$useState6[0];

  var _React$useState7 = React.useState(function () {
    return new THREE.Vector4();
  }),
      clipPlane = _React$useState7[0];

  var _React$useState8 = React.useState(function () {
    return new THREE.Vector3();
  }),
      view = _React$useState8[0];

  var _React$useState9 = React.useState(function () {
    return new THREE.Vector3();
  }),
      target = _React$useState9[0];

  var _React$useState10 = React.useState(function () {
    return new THREE.Vector4();
  }),
      q = _React$useState10[0];

  var _React$useState11 = React.useState(function () {
    return new THREE.Matrix4();
  }),
      textureMatrix = _React$useState11[0];

  var _React$useState12 = React.useState(function () {
    return new THREE.PerspectiveCamera();
  }),
      virtualCamera = _React$useState12[0];

  var _useThree = reactThreeFiber.useThree(),
      gl = _useThree.gl,
      scene = _useThree.scene,
      camera = _useThree.camera;

  var beforeRender = React.useCallback(function () {
    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);
    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);
    rotationMatrix.extractRotation(meshRef.current.matrixWorld);
    normal.set(0, 0, 1);
    normal.applyMatrix4(rotationMatrix);
    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away

    if (view.dot(normal) > 0) return;
    view.reflect(normal).negate();
    view.add(reflectorWorldPosition);
    rotationMatrix.extractRotation(camera.matrixWorld);
    lookAtPosition.set(0, 0, -1);
    lookAtPosition.applyMatrix4(rotationMatrix);
    lookAtPosition.add(cameraWorldPosition);
    target.subVectors(reflectorWorldPosition, lookAtPosition);
    target.reflect(normal).negate();
    target.add(reflectorWorldPosition);
    virtualCamera.position.copy(view);
    virtualCamera.up.set(0, 1, 0);
    virtualCamera.up.applyMatrix4(rotationMatrix);
    virtualCamera.up.reflect(normal);
    virtualCamera.lookAt(target);
    virtualCamera.far = camera.far; // Used in WebGLBackground

    virtualCamera.updateMatrixWorld();
    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix

    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);
    textureMatrix.multiply(virtualCamera.projectionMatrix);
    textureMatrix.multiply(virtualCamera.matrixWorldInverse);
    textureMatrix.multiply(meshRef.current.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html
    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf

    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);
    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);
    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);
    var projectionMatrix = virtualCamera.projectionMatrix;
    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];
    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];
    q.z = -1.0;
    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector

    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix

    projectionMatrix.elements[2] = clipPlane.x;
    projectionMatrix.elements[6] = clipPlane.y;
    projectionMatrix.elements[10] = clipPlane.z + 1.0;
    projectionMatrix.elements[14] = clipPlane.w; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  var _React$useMemo = React.useMemo(function () {
    var parameters = {
      minFilter: THREE.LinearFilter,
      magFilter: THREE.LinearFilter,
      format: THREE.RGBFormat,
      encoding: gl.outputEncoding
    };
    var fbo1 = new THREE.WebGLRenderTarget(resolution, resolution, parameters);
    fbo1.depthBuffer = true;
    fbo1.depthTexture = new THREE.DepthTexture(resolution, resolution);
    fbo1.depthTexture.format = THREE.DepthFormat;
    fbo1.depthTexture.type = THREE.UnsignedShortType;
    var fbo2 = new THREE.WebGLRenderTarget(resolution, resolution, parameters);
    var blurpass = new BlurPass({
      gl: gl,
      resolution: resolution,
      width: blur[0],
      height: blur[1],
      minDepthThreshold: minDepthThreshold,
      maxDepthThreshold: maxDepthThreshold,
      depthScale: depthScale,
      depthToBlurRatioBias: depthToBlurRatioBias
    });
    var reflectorProps = {
      mirror: mirror,
      textureMatrix: textureMatrix,
      mixBlur: mixBlur,
      tDiffuse: fbo1.texture,
      tDepth: fbo1.depthTexture,
      tDiffuseBlur: fbo2.texture,
      hasBlur: hasBlur,
      mixStrength: mixStrength,
      minDepthThreshold: minDepthThreshold,
      maxDepthThreshold: maxDepthThreshold,
      depthScale: depthScale,
      depthToBlurRatioBias: depthToBlurRatioBias,
      transparent: true,
      debug: debug,
      distortion: distortion,
      distortionMap: distortionMap,
      'defines-USE_BLUR': hasBlur ? '' : undefined,
      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,
      'defines-USE_DISTORTION': !!distortionMap ? '' : undefined
    };
    return [fbo1, fbo2, blurpass, reflectorProps];
  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug, distortion, distortionMap]),
      fbo1 = _React$useMemo[0],
      fbo2 = _React$useMemo[1],
      blurpass = _React$useMemo[2],
      reflectorProps = _React$useMemo[3];

  reactThreeFiber.useFrame(function () {
    if (!(meshRef == null ? void 0 : meshRef.current)) return;
    meshRef.current.visible = false;
    beforeRender();
    gl.setRenderTarget(fbo1);
    gl.render(scene, virtualCamera);
    if (hasBlur) blurpass.render(gl, fbo1, fbo2);
    meshRef.current.visible = true;
    gl.setRenderTarget(null);
  });
  return /*#__PURE__*/React.createElement("mesh", _extends__default['default']({
    ref: mergeRefs__default['default']([meshRef, ref])
  }, props), /*#__PURE__*/React.createElement("planeBufferGeometry", {
    args: args
  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/React.createElement("meshReflectorMaterial", reflectorProps));
});

var Shadow = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$fog = _ref.fog,
      fog = _ref$fog === void 0 ? false : _ref$fog,
      _ref$colorStop = _ref.colorStop,
      colorStop = _ref$colorStop === void 0 ? 0.0 : _ref$colorStop,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? 'black' : _ref$color,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.5 : _ref$opacity,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["fog", "colorStop", "color", "opacity"]);

  var canvas = React.useMemo(function () {
    var canvas = document.createElement('canvas');
    canvas.width = 128;
    canvas.height = 128;
    var context = canvas.getContext('2d');
    var gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);
    gradient.addColorStop(colorStop, new THREE.Color(color).getStyle());
    gradient.addColorStop(1, 'rgba(0,0,0,0)');
    context.fillStyle = gradient;
    context.fillRect(0, 0, canvas.width, canvas.height);
    return canvas;
  }, [color, colorStop]);
  return /*#__PURE__*/React.createElement("mesh", _extends__default['default']({
    ref: ref
  }, props), /*#__PURE__*/React.createElement("planeBufferGeometry", {
    attach: "geometry",
    args: [1, 1]
  }), /*#__PURE__*/React.createElement("meshBasicMaterial", {
    attach: "material",
    transparent: true,
    opacity: opacity,
    fog: fog
  }, /*#__PURE__*/React.createElement("canvasTexture", {
    attach: "map",
    args: [canvas]
  })));
});

function Stats(_ref) {
  var _ref$showPanel = _ref.showPanel,
      showPanel = _ref$showPanel === void 0 ? 0 : _ref$showPanel,
      className = _ref.className,
      parent = _ref.parent;
  var stats = useEffectfulState(function () {
    return new StatsImpl__default['default']();
  }, []);
  React.useEffect(function () {
    if (stats) {
      var node = parent && parent.current || document.body;
      stats.showPanel(showPanel);
      node == null ? void 0 : node.appendChild(stats.dom);
      if (className) stats.dom.classList.add(className);
      var begin = reactThreeFiber.addEffect(function () {
        return stats.begin();
      });
      var end = reactThreeFiber.addAfterEffect(function () {
        return stats.end();
      });
      return function () {
        node == null ? void 0 : node.removeChild(stats.dom);
        begin();
        end();
      };
    }
  }, [parent, stats, className, showPanel]);
  return null;
}

var Center = /*#__PURE__*/React.forwardRef(function Center(_ref, ref) {
  var children = _ref.children,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["children"]);

  var outer = React.useRef();
  var inner = React.useRef();
  React.useLayoutEffect(function () {
    if (inner.current && outer.current) {
      var box = new THREE.Box3();
      box.setFromObject(inner.current);
      var center = new THREE.Vector3();
      box.getSize(center);
      outer.current.position.set(-center.x / 2, -center.y / 2, -center.z / 2);
    }
  }, [children]);
  return /*#__PURE__*/React.createElement("group", _extends__default['default']({
    ref: ref
  }, props), /*#__PURE__*/React.createElement("group", {
    ref: outer
  }, /*#__PURE__*/React.createElement("group", {
    ref: inner
  }, children)));
});

function Preload(_ref) {
  var all = _ref.all,
      scene = _ref.scene,
      camera = _ref.camera;

  var _useThree = reactThreeFiber.useThree(),
      gl = _useThree.gl,
      dScene = _useThree.scene,
      dCamera = _useThree.camera; // Layout effect because it must run before React commits


  React.useLayoutEffect(function () {
    var invisible = [];

    if (all) {
      (scene || dScene).traverse(function (object) {
        if (object.visible === false) {
          invisible.push(object);
          object.visible = true;
        }
      });
    } // Now compile the scene


    gl.compile(scene || dScene, camera || dCamera); // Flips these objects back

    invisible.forEach(function (object) {
      return object.visible = false;
    }); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  return null;
}

function useAspect(type, width, height, factor) {
  if (factor === void 0) {
    factor = 1;
  }

  var _useThree = reactThreeFiber.useThree(),
      v = _useThree.viewport,
      aspect = _useThree.aspect;

  var adaptedHeight = height * (aspect > width / height ? v.width / width : v.height / height);
  var adaptedWidth = width * (aspect > width / height ? v.width / width : v.height / height);
  return [adaptedWidth * factor, adaptedHeight * factor, 1];
}

function useDetectGPU(props) {
  var _React$useState = React.useState(null),
      GPUTier = _React$useState[0],
      setGPUTier = _React$useState[1];

  React.useEffect(function () {
    detectGpu.getGPUTier(props).then(function (result) {
      return setGPUTier(result);
    });
  }, [props]);
  return GPUTier;
}

function useHelper(object3D, proto) {
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  var helper = React.useRef();

  var _useThree = reactThreeFiber.useThree(),
      scene = _useThree.scene;

  React.useEffect(function () {
    if (proto && object3D.current) {
      helper.current = _construct__default['default'](proto, [object3D.current].concat(args));

      if (helper.current) {
        scene.add(helper.current);
      }
    }

    return function () {
      if (helper.current) {
        scene.remove(helper.current);
      }
    };
  }, [scene, proto, object3D, args]);
  reactThreeFiber.useFrame(function () {
    if (helper.current) {
      helper.current.update();
    }
  });
  return helper;
}

/* eslint-disable react-hooks/rules-of-hooks */
function useContextBridge() {
  for (var _len = arguments.length, contexts = new Array(_len), _key = 0; _key < _len; _key++) {
    contexts[_key] = arguments[_key];
  }

  var cRef = React.useRef([]);
  cRef.current = contexts.map(function (context) {
    return React.useContext(context);
  });
  return React.useMemo(function () {
    return function (_ref) {
      var children = _ref.children;
      return contexts.reduceRight(function (acc, Context, i) {
        return /*#__PURE__*/React.createElement(Context.Provider, {
          value: cRef.current[i],
          children: acc
        });
      }, children
      /*
       * done this way in reference to:
       * https://github.com/DefinitelyTyped/DefinitelyTyped/issues/44572#issuecomment-625878049
       * https://github.com/microsoft/TypeScript/issues/14729
       */
      );
    };
  }, []);
}

function useAnimations(clips, root) {
  var ref = React.useRef();
  var actualRef = root ? root : ref;

  var _React$useState = React.useState(function () {
    return new THREE.AnimationMixer(undefined);
  }),
      mixer = _React$useState[0];

  var api = React.useMemo(function () {
    return {
      ref: actualRef,
      clips: clips,
      actions: clips.reduce(function (prev, clip) {
        var _extends2;

        return _extends__default['default']({}, prev, (_extends2 = {}, _extends2[clip.name] = null, _extends2));
      }, {}),
      names: clips.map(function (clip) {
        return clip.name;
      }),
      mixer: mixer
    };
  }, [clips, mixer, actualRef]);
  reactThreeFiber.useFrame(function (state, delta) {
    return mixer.update(delta);
  });
  React.useEffect(function () {
    var currentRoot = actualRef.current;

    if (currentRoot) {
      clips.forEach(function (clip) {
        return api.actions[clip.name] = mixer.clipAction(clip, currentRoot);
      });
    }

    return function () {
      return Object.values(api.actions).forEach(function (action) {
        if (currentRoot) {
          mixer.uncacheAction(action, currentRoot);
        }
      });
    };
  }, [api, clips, mixer, root, actualRef]);
  return api;
}

// 👇 uncomment when TS version supports function overloads
// export function useFBO(settings?: FBOSettings)
function useFBO(width, height, settings) {
  var _useThree = reactThreeFiber.useThree(),
      size = _useThree.size,
      gl = _useThree.gl;

  var dpr = React.useMemo(function () {
    return gl.getPixelRatio();
  }, [gl]);

  var _width = typeof width === 'number' ? width : size.width * dpr;

  var _height = typeof height === 'number' ? height : size.height * dpr;

  var _settings = (typeof width === 'number' ? settings : width) || {};

  var target = React.useMemo(function () {
    var multisample = _settings.multisample,
        samples = _settings.samples,
        targetSettings = _objectWithoutPropertiesLoose__default['default'](_settings, ["multisample", "samples"]);

    var target;

    if (multisample && gl.capabilities.isWebGL2) {
      target = new THREE.WebGLMultisampleRenderTarget(_width, _height, targetSettings);
      if (samples) target.samples = samples;
    } else {
      target = new THREE.WebGLRenderTarget(_width, _height, targetSettings);
    }

    return target; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  React.useEffect(function () {
    target.setSize(_width, _height);
  }, [target, _width, _height]);
  React.useEffect(function () {
    return function () {
      return target.dispose();
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  return target;
}

function useSimplification(simplePercent) {
  var ref = React.useRef();
  var original = React.useRef();
  var modifier = React.useRef();
  React.useEffect(function () {
    if (!original.current) {
      original.current = ref.current.geometry.clone();
      modifier.current = new SimplifyModifier.SimplifyModifier();
    }
  }, []);
  React.useEffect(function () {
    if (original.current && ref.current) {
      var geometry = new THREE.BufferGeometry();
      geometry = original.current.clone();
      var count = Math.floor(geometry.attributes.position.count * simplePercent); // number of vertices to remove

      ref.current.geometry = modifier.current.modify(geometry, count);
    }
  }, [simplePercent]);
  return ref;
}

function useTessellation(passes, maxEdgeLength) {
  if (passes === void 0) {
    passes = 3;
  }

  var ref = React.useRef();
  var original = React.useRef();
  var modifier = React.useRef();
  React.useEffect(function () {
    if (!original.current) {
      original.current = ref.current.geometry.clone();
      modifier.current = new TessellateModifier.TessellateModifier(parseInt(maxEdgeLength), passes);
    }
  }, [maxEdgeLength, passes]);
  React.useEffect(function () {
    modifier.current.maxEdgeLength = maxEdgeLength;
  }, [maxEdgeLength]);
  React.useEffect(function () {
    if (original.current && ref.current) {
      var geometry = new THREE.BufferGeometry();
      geometry = original.current.clone();
      geometry = modifier.current.modify(geometry);
      ref.current.geometry = geometry;
    }
  }, [maxEdgeLength, passes]);
  return ref;
}

function useEdgeSplit(cutOffAngle, tryKeepNormals) {
  if (tryKeepNormals === void 0) {
    tryKeepNormals = true;
  }

  var ref = React.useRef();
  var original = React.useRef();
  var modifier = React.useRef();
  React.useEffect(function () {
    if (!original.current && ref.current) {
      original.current = ref.current.geometry.clone();
      modifier.current = new EdgeSplitModifier.EdgeSplitModifier();
    }
  }, []);
  React.useEffect(function () {
    if (original.current && ref.current && modifier.current) {
      var geometry = new THREE.BufferGeometry();
      geometry = original.current.clone();
      var modifiedGeometry = modifier.current.modify(geometry, cutOffAngle, tryKeepNormals);
      modifiedGeometry.computeVertexNormals();
      ref.current.geometry = modifiedGeometry;
    }
  }, [cutOffAngle, tryKeepNormals]);
  return ref;
}

var CurveModifier = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var children = _ref.children,
      curve = _ref.curve;

  var _React$useState = React.useState(),
      object3D = _React$useState[0],
      setObj = _React$useState[1];

  var original = React.useRef();
  var modifier = React.useRef();
  React.useImperativeHandle(ref, function () {
    return {
      moveAlongCurve: function moveAlongCurve(val) {
        var _modifier$current;

        (_modifier$current = modifier.current) == null ? void 0 : _modifier$current.moveAlongCurve(val);
      }
    };
  });
  React.useEffect(function () {
    if (!modifier.current && original.current && ref) {
      modifier.current = new CurveModifier$1.Flow(original.current);
      setObj(modifier.current.object3D);
    }
  }, [children, ref]);
  React.useEffect(function () {
    if (original.current && curve) {
      var _modifier$current2;

      (_modifier$current2 = modifier.current) == null ? void 0 : _modifier$current2.updateCurve(0, curve);
    }
  }, [curve]);
  return object3D ? /*#__PURE__*/React.createElement("primitive", {
    object: object3D
  }) : /*#__PURE__*/React.cloneElement(React.Children.only(children), {
    ref: original
  });
});

var distort = "#define GLSLIFY 1\nvec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}float snoise(vec3 v){const vec2 C=vec2(1.0/6.0,1.0/3.0);const vec4 D=vec4(0.0,0.5,1.0,2.0);vec3 i=floor(v+dot(v,C.yyy));vec3 x0=v-i+dot(i,C.xxx);vec3 g=step(x0.yzx,x0.xyz);vec3 l=1.0-g;vec3 i1=min(g.xyz,l.zxy);vec3 i2=max(g.xyz,l.zxy);vec3 x1=x0-i1+C.xxx;vec3 x2=x0-i2+C.yyy;vec3 x3=x0-D.yyy;i=mod289(i);vec4 p=permute(permute(permute(i.z+vec4(0.0,i1.z,i2.z,1.0))+i.y+vec4(0.0,i1.y,i2.y,1.0))+i.x+vec4(0.0,i1.x,i2.x,1.0));float n_=0.142857142857;vec3 ns=n_*D.wyz-D.xzx;vec4 j=p-49.0*floor(p*ns.z*ns.z);vec4 x_=floor(j*ns.z);vec4 y_=floor(j-7.0*x_);vec4 x=x_*ns.x+ns.yyyy;vec4 y=y_*ns.x+ns.yyyy;vec4 h=1.0-abs(x)-abs(y);vec4 b0=vec4(x.xy,y.xy);vec4 b1=vec4(x.zw,y.zw);vec4 s0=floor(b0)*2.0+1.0;vec4 s1=floor(b1)*2.0+1.0;vec4 sh=-step(h,vec4(0.0));vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;vec3 p0=vec3(a0.xy,h.x);vec3 p1=vec3(a0.zw,h.y);vec3 p2=vec3(a1.xy,h.z);vec3 p3=vec3(a1.zw,h.w);vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));p0*=norm.x;p1*=norm.y;p2*=norm.z;p3*=norm.w;vec4 m=max(0.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.0);m=m*m;return 42.0*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),dot(p2,x2),dot(p3,x3)));}"; // eslint-disable-line

var DistortMaterialImpl = /*#__PURE__*/function (_MeshPhysicalMaterial) {
  _inheritsLoose__default['default'](DistortMaterialImpl, _MeshPhysicalMaterial);

  function DistortMaterialImpl(parameters) {
    var _this;

    if (parameters === void 0) {
      parameters = {};
    }

    _this = _MeshPhysicalMaterial.call(this, parameters) || this;

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_time", void 0);

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_distort", void 0);

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_radius", void 0);

    _this.setValues(parameters);

    _this._time = {
      value: 0
    };
    _this._distort = {
      value: 0.4
    };
    _this._radius = {
      value: 1
    };
    return _this;
  }

  var _proto = DistortMaterialImpl.prototype;

  _proto.onBeforeCompile = function onBeforeCompile(shader) {
    shader.uniforms.time = this._time;
    shader.uniforms.radius = this._radius;
    shader.uniforms.distort = this._distort;
    shader.vertexShader = "\n      uniform float time;\n      uniform float radius;\n      uniform float distort;\n      " + distort + "\n      " + shader.vertexShader + "\n    ";
    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', "\n        float updateTime = time / 50.0;\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\n        ");
  };

  _createClass__default['default'](DistortMaterialImpl, [{
    key: "time",
    get: function get() {
      return this._time.value;
    },
    set: function set(v) {
      this._time.value = v;
    }
  }, {
    key: "distort",
    get: function get() {
      return this._distort.value;
    },
    set: function set(v) {
      this._distort.value = v;
    }
  }, {
    key: "radius",
    get: function get() {
      return this._radius.value;
    },
    set: function set(v) {
      this._radius.value = v;
    }
  }]);

  return DistortMaterialImpl;
}(THREE.MeshPhysicalMaterial);

var MeshDistortMaterial = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$speed = _ref.speed,
      speed = _ref$speed === void 0 ? 1 : _ref$speed,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["speed"]);

  var _React$useState = React.useState(function () {
    return new DistortMaterialImpl();
  }),
      material = _React$useState[0];

  reactThreeFiber.useFrame(function (state) {
    return material && (material.time = state.clock.getElapsedTime() * speed);
  });
  return /*#__PURE__*/React.createElement("primitive", _extends__default['default']({
    dispose: undefined,
    object: material,
    ref: ref,
    attach: "material"
  }, props));
});

var WobbleMaterialImpl = /*#__PURE__*/function (_MeshStandardMaterial) {
  _inheritsLoose__default['default'](WobbleMaterialImpl, _MeshStandardMaterial);

  function WobbleMaterialImpl(parameters) {
    var _this;

    if (parameters === void 0) {
      parameters = {};
    }

    _this = _MeshStandardMaterial.call(this, parameters) || this;

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_time", void 0);

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "_factor", void 0);

    _this.setValues(parameters);

    _this._time = {
      value: 0
    };
    _this._factor = {
      value: 1
    };
    return _this;
  }

  var _proto = WobbleMaterialImpl.prototype;

  _proto.onBeforeCompile = function onBeforeCompile(shader) {
    shader.uniforms.time = this._time;
    shader.uniforms.factor = this._factor;
    shader.vertexShader = "\n      uniform float time;\n      uniform float factor;\n      " + shader.vertexShader + "\n    ";
    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', "float theta = sin( time + position.y ) / 2.0 * factor;\n        float c = cos( theta );\n        float s = sin( theta );\n        mat3 m = mat3( c, 0, s, 0, 1, 0, -s, 0, c );\n        vec3 transformed = vec3( position ) * m;\n        vNormal = vNormal * m;");
  };

  _createClass__default['default'](WobbleMaterialImpl, [{
    key: "time",
    get: function get() {
      return this._time.value;
    },
    set: function set(v) {
      this._time.value = v;
    }
  }, {
    key: "factor",
    get: function get() {
      return this._factor.value;
    },
    set: function set(v) {
      this._factor.value = v;
    }
  }]);

  return WobbleMaterialImpl;
}(THREE.MeshStandardMaterial);

var MeshWobbleMaterial = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$speed = _ref.speed,
      speed = _ref$speed === void 0 ? 1 : _ref$speed,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["speed"]);

  var _React$useState = React.useState(function () {
    return new WobbleMaterialImpl();
  }),
      material = _React$useState[0];

  reactThreeFiber.useFrame(function (state) {
    return material && (material.time = state.clock.getElapsedTime() * speed);
  });
  return /*#__PURE__*/React.createElement("primitive", _extends__default['default']({
    dispose: undefined,
    object: material,
    ref: ref,
    attach: "material"
  }, props));
});

function shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {
  return /*#__PURE__*/function (_THREE$ShaderMaterial) {
    _inheritsLoose__default['default'](_class, _THREE$ShaderMaterial);

    function _class() {
      var _this;

      var entries = Object.entries(uniforms); // Create unforms and shaders

      _this = _THREE$ShaderMaterial.call(this, {
        uniforms: entries.reduce(function (acc, _ref) {
          var _THREE$UniformsUtils$;

          var name = _ref[0],
              value = _ref[1];
          var uniform = THREE.UniformsUtils.clone((_THREE$UniformsUtils$ = {}, _THREE$UniformsUtils$[name] = {
            value: value
          }, _THREE$UniformsUtils$));
          return _extends__default['default']({}, acc, uniform);
        }, {}),
        vertexShader: vertexShader,
        fragmentShader: fragmentShader
      }) || this; // Create getter/setters

      entries.forEach(function (_ref2) {
        var name = _ref2[0];
        return Object.defineProperty(_assertThisInitialized__default['default'](_this), name, {
          get: function get() {
            return _this.uniforms[name].value;
          },
          set: function set(v) {
            return _this.uniforms[name].value = v;
          }
        });
      });
      if (onInit) onInit(_assertThisInitialized__default['default'](_this));
      return _this;
    }

    return _class;
  }(THREE.ShaderMaterial);
}

function calcPosFromAngles(inclination, azimuth, vector) {
  if (vector === void 0) {
    vector = new THREE.Vector3();
  }

  var theta = Math.PI * (inclination - 0.5);
  var phi = 2 * Math.PI * (azimuth - 0.5);
  vector.x = Math.cos(phi);
  vector.y = Math.sin(theta);
  vector.z = Math.sin(phi);
  return vector;
}
var Sky = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$inclination = _ref.inclination,
      inclination = _ref$inclination === void 0 ? 0 : _ref$inclination,
      _ref$azimuth = _ref.azimuth,
      azimuth = _ref$azimuth === void 0 ? 0.25 : _ref$azimuth,
      _ref$distance = _ref.distance,
      distance = _ref$distance === void 0 ? 100 : _ref$distance,
      _ref$mieCoefficient = _ref.mieCoefficient,
      mieCoefficient = _ref$mieCoefficient === void 0 ? 0.005 : _ref$mieCoefficient,
      _ref$mieDirectionalG = _ref.mieDirectionalG,
      mieDirectionalG = _ref$mieDirectionalG === void 0 ? 0.8 : _ref$mieDirectionalG,
      _ref$rayleigh = _ref.rayleigh,
      rayleigh = _ref$rayleigh === void 0 ? 1 : _ref$rayleigh,
      _ref$turbidity = _ref.turbidity,
      turbidity = _ref$turbidity === void 0 ? 2 : _ref$turbidity,
      _ref$sunPosition = _ref.sunPosition,
      sunPosition = _ref$sunPosition === void 0 ? calcPosFromAngles(inclination, azimuth) : _ref$sunPosition,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["inclination", "azimuth", "distance", "mieCoefficient", "mieDirectionalG", "rayleigh", "turbidity", "sunPosition"]);

  var scale = React.useMemo(function () {
    return new THREE.Vector3().setScalar(distance);
  }, [distance]);

  var _React$useState = React.useState(function () {
    return new Sky$1.Sky();
  }),
      sky = _React$useState[0];

  return /*#__PURE__*/React.createElement("primitive", _extends__default['default']({
    dispose: undefined,
    object: sky,
    ref: ref,
    "material-uniforms-mieCoefficient-value": mieCoefficient,
    "material-uniforms-mieDirectionalG-value": mieDirectionalG,
    "material-uniforms-rayleigh-value": rayleigh,
    "material-uniforms-sunPosition-value": sunPosition,
    "material-uniforms-turbidity-value": turbidity,
    scale: scale
  }, props));
});

var pcss = function pcss(_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      frustrum = _ref.frustrum,
      _ref$frustum = _ref.frustum,
      frustum = _ref$frustum === void 0 ? 3.75 : _ref$frustum,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 0.005 : _ref$size,
      _ref$near = _ref.near,
      near = _ref$near === void 0 ? 9.5 : _ref$near,
      _ref$samples = _ref.samples,
      samples = _ref$samples === void 0 ? 17 : _ref$samples,
      _ref$rings = _ref.rings,
      rings = _ref$rings === void 0 ? 11 : _ref$rings;

  return "#define LIGHT_WORLD_SIZE " + size + "\n#define LIGHT_FRUSTUM_WIDTH " + (frustrum != null ? frustrum : frustum) + "\n#define LIGHT_SIZE_UV (LIGHT_WORLD_SIZE / LIGHT_FRUSTUM_WIDTH)\n#define NEAR_PLANE " + near + "\n\n#define NUM_SAMPLES " + samples + "\n#define NUM_RINGS " + rings + "\n#define BLOCKER_SEARCH_NUM_SAMPLES NUM_SAMPLES\n#define PCF_NUM_SAMPLES NUM_SAMPLES\n\nvec2 poissonDisk[NUM_SAMPLES];\n\nvoid initPoissonSamples(const in vec2 randomSeed) {\n\tfloat ANGLE_STEP = PI2 * float(NUM_RINGS) / float(NUM_SAMPLES);\n\tfloat INV_NUM_SAMPLES = 1.0 / float(NUM_SAMPLES);\n\tfloat angle = rand(randomSeed) * PI2;\n\tfloat radius = INV_NUM_SAMPLES;\n\tfloat radiusStep = radius;\n\tfor (int i = 0; i < NUM_SAMPLES; i++) {\n\t\tpoissonDisk[i] = vec2(cos(angle), sin(angle)) * pow(radius, 0.75);\n\t\tradius += radiusStep;\n\t\tangle += ANGLE_STEP;\n\t}\n}\n\nfloat penumbraSize(const in float zReceiver, const in float zBlocker) { // Parallel plane estimation\n\treturn (zReceiver - zBlocker) / zBlocker;\n}\n\nfloat findBlocker(sampler2D shadowMap, const in vec2 uv, const in float zReceiver) {\n\tfloat searchRadius = LIGHT_SIZE_UV * (zReceiver - NEAR_PLANE) / zReceiver;\n\tfloat blockerDepthSum = 0.0;\n\tint numBlockers = 0;\n\tfor (int i = 0; i < BLOCKER_SEARCH_NUM_SAMPLES; i++) {\n\t\tfloat shadowMapDepth = unpackRGBAToDepth(texture2D(shadowMap, uv + poissonDisk[i] * searchRadius));\n\t\tif (shadowMapDepth < zReceiver) {\n\t\t\tblockerDepthSum += shadowMapDepth;\n\t\t\tnumBlockers++;\n\t\t}\n\t}\n\tif (numBlockers == 0) return -1.0;\n\treturn blockerDepthSum / float(numBlockers);\n}\n\nfloat PCF_Filter(sampler2D shadowMap, vec2 uv, float zReceiver, float filterRadius) {\n\tfloat sum = 0.0;\n\tfor (int i = 0; i < PCF_NUM_SAMPLES; i++) {\n\t\tfloat depth = unpackRGBAToDepth(texture2D(shadowMap, uv + poissonDisk[ i ] * filterRadius));\n\t\tif (zReceiver <= depth) sum += 1.0;\n\t}\n\tfor (int i = 0; i < PCF_NUM_SAMPLES; i++) {\n\t\tfloat depth = unpackRGBAToDepth(texture2D(shadowMap, uv + -poissonDisk[ i ].yx * filterRadius));\n\t\tif (zReceiver <= depth) sum += 1.0;\n\t}\n\treturn sum / (2.0 * float(PCF_NUM_SAMPLES));\n}\n\nfloat PCSS(sampler2D shadowMap, vec4 coords) {\n\tvec2 uv = coords.xy;\n\tfloat zReceiver = coords.z; // Assumed to be eye-space z in this code\n\tinitPoissonSamples(uv);\n\tfloat avgBlockerDepth = findBlocker(shadowMap, uv, zReceiver);\n\tif (avgBlockerDepth == -1.0) return 1.0;\n\tfloat penumbraRatio = penumbraSize(zReceiver, avgBlockerDepth);\n\tfloat filterRadius = penumbraRatio * LIGHT_SIZE_UV * NEAR_PLANE / zReceiver;\n\treturn PCF_Filter(shadowMap, uv, zReceiver, filterRadius);\n}";
};

var deployed = false;
var softShadows = function softShadows(props) {
  // Avoid adding the effect twice, which may happen in HMR scenarios
  if (!deployed) {
    if (props == null ? void 0 : props.frustrum) {
      console.warn('You have used an incorrect spelling of frustrum, this will be deprecated in the future');
    }

    deployed = true;
    var shader = THREE.ShaderChunk.shadowmap_pars_fragment;
    shader = shader.replace('#ifdef USE_SHADOWMAP', '#ifdef USE_SHADOWMAP\n' + pcss(_extends__default['default']({}, props)));
    shader = shader.replace('#if defined( SHADOWMAP_TYPE_PCF )', '\nreturn PCSS(shadowMap, shadowCoord);\n#if defined( SHADOWMAP_TYPE_PCF )');
    THREE.ShaderChunk.shadowmap_pars_fragment = shader;
  }
};

var StarfieldMaterial = /*#__PURE__*/function (_ShaderMaterial) {
  _inheritsLoose__default['default'](StarfieldMaterial, _ShaderMaterial);

  function StarfieldMaterial() {
    return _ShaderMaterial.call(this, {
      uniforms: {
        time: {
          value: 0.0
        },
        fade: {
          value: 1.0
        }
      },
      vertexShader: "uniform float time;\n      attribute float size;\n      varying vec3 vColor;\n      void main() {\n        vColor = color;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 0.5);\n        gl_PointSize = size * (30.0 / -mvPosition.z) * (3.0 + sin(mvPosition.x + 2.0 * time + 100.0));\n        gl_Position = projectionMatrix * mvPosition;\n      }",
      fragmentShader: "uniform sampler2D pointTexture;\n      uniform float fade;\n      varying vec3 vColor;\n      void main() {\n        float opacity = 1.0;\n        if (fade == 1.0) {\n          float d = distance(gl_PointCoord, vec2(0.5, 0.5));\n          opacity = 1.0 / (1.0 + exp(16.0 * (d - 0.25)));\n        }\n        gl_FragColor = vec4(vColor, opacity);\n      }"
    }) || this;
  }

  return StarfieldMaterial;
}(THREE.ShaderMaterial);

var genStar = function genStar(r) {
  return new THREE.Vector3().setFromSpherical(new THREE.Spherical(r, Math.acos(1 - Math.random() * 2), Math.random() * 2 * Math.PI));
};

var Stars = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$radius = _ref.radius,
      radius = _ref$radius === void 0 ? 100 : _ref$radius,
      _ref$depth = _ref.depth,
      depth = _ref$depth === void 0 ? 50 : _ref$depth,
      _ref$count = _ref.count,
      count = _ref$count === void 0 ? 5000 : _ref$count,
      _ref$saturation = _ref.saturation,
      saturation = _ref$saturation === void 0 ? 0 : _ref$saturation,
      _ref$factor = _ref.factor,
      factor = _ref$factor === void 0 ? 4 : _ref$factor,
      _ref$fade = _ref.fade,
      fade = _ref$fade === void 0 ? false : _ref$fade;
  var material = React.useRef();

  var _React$useMemo = React.useMemo(function () {
    var positions = [];
    var colors = [];
    var sizes = Array.from({
      length: count
    }, function () {
      return (0.5 + 0.5 * Math.random()) * factor;
    });
    var color = new THREE.Color();
    var r = radius + depth;
    var increment = depth / count;

    for (var i = 0; i < count; i++) {
      r -= increment * Math.random();
      positions.push.apply(positions, genStar(r).toArray());
      color.setHSL(i / count, saturation, 0.9);
      colors.push(color.r, color.g, color.b);
    }

    return [new Float32Array(positions), new Float32Array(colors), new Float32Array(sizes)];
  }, [count, depth, factor, radius, saturation]),
      position = _React$useMemo[0],
      color = _React$useMemo[1],
      size = _React$useMemo[2];

  reactThreeFiber.useFrame(function (state) {
    return material.current && (material.current.uniforms.time.value = state.clock.getElapsedTime());
  });

  var _React$useState = React.useState(function () {
    return new StarfieldMaterial();
  }),
      starfieldMaterial = _React$useState[0];

  return /*#__PURE__*/React.createElement("points", {
    ref: ref
  }, /*#__PURE__*/React.createElement("bufferGeometry", {
    attach: "geometry"
  }, /*#__PURE__*/React.createElement("bufferAttribute", {
    attachObject: ['attributes', 'position'],
    args: [position, 3]
  }), /*#__PURE__*/React.createElement("bufferAttribute", {
    attachObject: ['attributes', 'color'],
    args: [color, 3]
  }), /*#__PURE__*/React.createElement("bufferAttribute", {
    attachObject: ['attributes', 'size'],
    args: [size, 1]
  })), /*#__PURE__*/React.createElement("primitive", {
    dispose: undefined,
    ref: material,
    object: starfieldMaterial,
    attach: "material",
    blending: THREE.AdditiveBlending,
    "uniforms-fade-value": fade,
    transparent: true,
    vertexColors: true
  }));
});

var ContactShadows = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? 1 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === void 0 ? 1 : _ref$height,
      _ref$blur = _ref.blur,
      blur = _ref$blur === void 0 ? 1 : _ref$blur,
      _ref$far = _ref.far,
      far = _ref$far === void 0 ? 10 : _ref$far,
      _ref$resolution = _ref.resolution,
      resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["opacity", "width", "height", "blur", "far", "resolution"]);

  var _useThree = reactThreeFiber.useThree(),
      scene = _useThree.scene,
      gl = _useThree.gl;

  var shadowCamera = React.useRef();

  var _React$useMemo = React.useMemo(function () {
    var renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);
    var renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);
    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;
    var planeGeometry = new THREE.PlaneBufferGeometry(width, height).rotateX(Math.PI / 2);
    var blurPlane = new THREE.Mesh(planeGeometry);
    var depthMaterial = new THREE.MeshDepthMaterial();
    depthMaterial.depthTest = depthMaterial.depthWrite = false;

    depthMaterial.onBeforeCompile = function (shader) {
      return shader.fragmentShader = shader.fragmentShader.replace('1.0 - fragCoordZ ), opacity );', '0.0 ), ( 1.0 - fragCoordZ ) * 1.0 );');
    };

    var horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader.HorizontalBlurShader);
    var verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader.VerticalBlurShader);
    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;
    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];
  }, [resolution, width, height]),
      renderTarget = _React$useMemo[0],
      planeGeometry = _React$useMemo[1],
      depthMaterial = _React$useMemo[2],
      blurPlane = _React$useMemo[3],
      horizontalBlurMaterial = _React$useMemo[4],
      verticalBlurMaterial = _React$useMemo[5],
      renderTargetBlur = _React$useMemo[6];

  reactThreeFiber.useFrame(function () {
    if (shadowCamera.current) {
      var initialBackground = scene.background;
      scene.background = null;
      scene.overrideMaterial = depthMaterial;
      gl.setRenderTarget(renderTarget);
      gl.render(scene, shadowCamera.current);
      scene.overrideMaterial = null;
      blurPlane.material = horizontalBlurMaterial;
      blurPlane.material.uniforms.tDiffuse.value = renderTarget.texture;
      horizontalBlurMaterial.uniforms.h.value = blur / 256;
      gl.setRenderTarget(renderTargetBlur);
      gl.render(blurPlane, shadowCamera.current);
      blurPlane.material = verticalBlurMaterial;
      blurPlane.material.uniforms.tDiffuse.value = renderTargetBlur.texture;
      verticalBlurMaterial.uniforms.v.value = blur / 256;
      gl.setRenderTarget(renderTarget);
      gl.render(blurPlane, shadowCamera.current);
      gl.setRenderTarget(null);
      scene.background = initialBackground;
    }
  });
  return /*#__PURE__*/React.createElement("group", _extends__default['default']({}, props, {
    ref: ref
  }), /*#__PURE__*/React.createElement("mesh", {
    geometry: planeGeometry,
    scale: [1, -1, 1],
    rotation: [-Math.PI / 2, 0, 0]
  }, /*#__PURE__*/React.createElement("meshBasicMaterial", {
    map: renderTarget.texture,
    transparent: true,
    opacity: opacity
  })), /*#__PURE__*/React.createElement("orthographicCamera", {
    ref: shadowCamera,
    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]
  }));
});

var eps = 0.00001;

function createShape(width, height, radius0) {
  var shape = new THREE.Shape();
  var radius = radius0 - eps;
  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);
  shape.absarc(eps, height - radius * 2, eps, Math.PI, Math.PI / 2, true);
  shape.absarc(width - radius * 2, height - radius * 2, eps, Math.PI / 2, 0, true);
  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);
  return shape;
}

var RoundedBox = /*#__PURE__*/React.forwardRef(function RoundedBox(_ref, ref) {
  var _ref$args = _ref.args;
  _ref$args = _ref$args === void 0 ? [] : _ref$args;

  var _ref$args$ = _ref$args[0],
      width = _ref$args$ === void 0 ? 1 : _ref$args$,
      _ref$args$2 = _ref$args[1],
      height = _ref$args$2 === void 0 ? 1 : _ref$args$2,
      _ref$args$3 = _ref$args[2],
      depth = _ref$args$3 === void 0 ? 1 : _ref$args$3,
      _ref$radius = _ref.radius,
      radius = _ref$radius === void 0 ? 0.05 : _ref$radius,
      _ref$smoothness = _ref.smoothness,
      smoothness = _ref$smoothness === void 0 ? 4 : _ref$smoothness,
      children = _ref.children,
      rest = _objectWithoutPropertiesLoose__default['default'](_ref, ["args", "radius", "smoothness", "children"]);

  var shape = React.useMemo(function () {
    return createShape(width, height, radius);
  }, [width, height, radius]);
  var params = React.useMemo(function () {
    return {
      depth: depth - radius * 2,
      bevelEnabled: true,
      bevelSegments: smoothness * 2,
      steps: 1,
      bevelSize: radius - eps,
      bevelThickness: radius,
      curveSegments: smoothness
    };
  }, [depth, radius, smoothness]);
  var geomRef = reactThreeFiber.useUpdate(function (geometry) {
    return void geometry.center();
  }, [shape, params]);
  return /*#__PURE__*/React.createElement("mesh", _extends__default['default']({
    ref: ref
  }, rest), /*#__PURE__*/React.createElement("extrudeBufferGeometry", {
    attach: "geometry",
    ref: geomRef,
    args: [shape, params]
  }), children);
});

function createScreenQuadGeometry() {
  var geometry = new THREE.BufferGeometry();
  var vertices = new Float32Array([-1, -1, 3, -1, -1, 3]);
  geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 2));
  return geometry;
}

var ScreenQuad = /*#__PURE__*/React.forwardRef(function ScreenQuad(_ref, ref) {
  var children = _ref.children,
      restProps = _objectWithoutPropertiesLoose__default['default'](_ref, ["children"]);

  var geometry = React.useMemo(createScreenQuadGeometry, []);
  return /*#__PURE__*/React.createElement("mesh", _extends__default['default']({
    ref: ref,
    geometry: geometry,
    frustumCulled: false
  }, restProps), children);
});

var matcapList = {
  '0': '0404E8_0404B5_0404CB_3333FC',
  '1': '045C5C_0DBDBD_049393_04A4A4',
  '2': '046363_0CC3C3_049B9B_04ACAC',
  '3': '0489C5_0DDDF9_04C3EE_04AFE1',
  '4': '04989A_0CE3E4_04D2D5_04C7C8',
  '5': '04C455_0EFABC_04F097_04E17A',
  '6': '04CC77_0CF7CA_04E9A7_04AB54',
  '7': '04E804_04B504_04CB04_33FC33',
  '8': '04E8E8_04B5B5_04CCCC_33FCFC',
  '9': '050505_747474_4C4C4C_333333',
  '10': '070B0C_B2C7CE_728FA3_5B748B',
  '11': '090909_9C9C9C_555555_7C7C7C',
  '12': '0A0A0A_A9A9A9_525252_747474',
  '13': '0C0CC3_04049F_040483_04045C',
  '14': '0C430C_257D25_439A43_3C683C',
  '15': '0D0DBD_040497_04047B_040455',
  '16': '0D0DE3_040486_0404AF_0404CF',
  '17': '0DBD0D_049704_047B04_045504',
  '18': '0F0F0F_4B4B4B_1C1C1C_2C2C2C',
  '19': '0F990F_047B04_044604_046704',
  '20': '15100F_241D1B_292424_2C2C27',
  '21': '161B1F_C7E0EC_90A5B3_7B8C9B',
  '22': '167E76_36D6D2_23B2AC_27C1BE',
  '23': '17395A_7EBCC7_4D8B9F_65A1B5',
  '24': '181F1F_475057_616566_525C62',
  '25': '191514_6D5145_4E3324_3B564D',
  '26': '1A2461_3D70DB_2C3C8F_2C6CAC',
  '27': '1B1B1B_515151_7E7E7E_6C6C6C',
  '28': '1B1B1B_999999_575757_747474',
  '29': '1B1C19_5F615D_4B4E4C_3F403D',
  '30': '1C1810_352F23_2B2C1C_2B2C24',
  '31': '1C70C6_09294C_0F3F73_52B3F6',
  '32': '1D2424_565F66_4E555A_646C6E',
  '33': '1D2A21_43443B_655B54_545C54',
  '34': '1D3FCC_051B5F_81A0F2_5579E9',
  '35': '221917_928380_5F504D_7C746C',
  '36': '232014_908B78_5E5743_747460',
  '37': '242733_333A4D_3E4554_3C3B43',
  '38': '245642_3D8168_3D6858_417364',
  '39': '253C3C_528181_406C6C_385F5F',
  '40': '254FB0_99AFF0_6587D8_1D3279',
  '41': '27222B_677491_484F6A_5D657A',
  '42': '281813_604233_4B3426_442B22',
  '43': '28292A_D3DAE5_A3ACB8_818183',
  '44': '291912_473531_3C2C25_3A2424',
  '45': '293534_B2BFC5_738289_8A9AA7',
  '46': '293D21_ABC692_73B255_667C5C',
  '47': '2A2A2A_B3B3B3_6D6D6D_848C8C',
  '48': '2A2A2A_DBDBDB_6A6A6A_949494',
  '49': '2A2D21_555742_898974_6C745B',
  '50': '2A4BA7_1B2D44_1F3768_233C81',
  '51': '2A6276_041218_739BA6_042941',
  '52': '2B2828_7B796F_534F4A_616464',
  '53': '2B2B22_3C3C30_464538_121210',
  '54': '2D2D2A_74716E_8F8C8C_92958E',
  '55': '2D2D2F_C6C2C5_727176_94949B',
  '56': '2D8753_5CD6A5_45BB82_4CC494',
  '57': '2E2E2D_7D7C76_A3A39F_949C94',
  '58': '2E763A_78A0B7_B3D1CF_14F209',
  '59': '2EAC9E_61EBE3_4DDDD1_43D1C6',
  '60': '2F2FAA_1E1E87_10104E_1C1C70',
  '61': '2F3747_6A7C9E_54637F_62748B',
  '62': '300706_888576_822821_876E79',
  '63': '302721_CAC1BB_7A706A_91959B',
  '64': '304FB1_69A1EF_5081DF_5C8CE6',
  '65': '312C34_A2AAB3_61656A_808494',
  '66': '312D20_80675C_8B8C8B_85848C',
  '67': '313131_BBBBBB_878787_A3A4A4',
  '68': '320455_720DBE_560496_47047B',
  '69': '32201D_613C3C_563533_8C655F',
  '70': '32302B_4C4842_121211_1C1C14',
  '71': '323C4D_B79039_7C6A44_605C48',
  '72': '326666_66CBC9_C0B8AE_52B3B4',
  '73': '331A0B_B17038_7D4E28_5B351A',
  '74': '336EB3_152578_A4C5E2_74AED9',
  '75': '34352A_718184_50605E_6E6761',
  '76': '346088_6ABED7_56A0C5_4E91B8',
  '77': '34A09C_6EE5E3_5CD7D3_4EC9C6',
  '78': '34AB94_36DFC1_19F9EB_6C6E62',
  '79': '353535_CFCFCF_828282_A4A4A4',
  '80': '36220C_C6C391_8C844A_8B7B4C',
  '81': '36312E_726461_59504D_645C5C',
  '82': '365123_C6E5A3_A8D18D_8EB16C',
  '83': '36C8FA_176ACB_24A7EF_1D93EC',
  '84': '37C337_279F27_186018_248824',
  '85': '385264_A1D3E2_86ADC1_6E94A8',
  '86': '385862_6D8B8D_647B80_1A2E2F',
  '87': '386169_A9CFDB_153C23_7CA3AC',
  '88': '38925D_142B23_1D4835_2A6449',
  '89': '392307_B3AE7D_6D5618_847C42',
  '90': '39433A_65866E_86BF8B_BFF8D8',
  '91': '394641_B1A67E_75BEBE_7D7256',
  '92': '3A2412_A78B5F_705434_836C47',
  '93': '3A3329_C9B090_928069_A9957A',
  '94': '3A3D37_7E7F75_BCBFB6_9C9C94',
  '95': '3B3B3B_C7C7C7_878787_A4A4A4',
  '96': '3B3C3F_DAD9D5_929290_ABACA8',
  '97': '3B4235_7B9395_5B716C_70847B',
  '98': '3B6E10_E3F2C3_88AC2E_99CE51',
  '99': '3D1F12_653821_070404_22130B',
  '100': '3E2335_D36A1B_8E4A2E_2842A5',
  '101': '3E3D39_D6CEAF_91BAC1_897966',
  '102': '3E3E36_72726D_63645D_0E0F0C',
  '103': '3E3E3E_AEAEAE_848484_777777',
  '104': '3E95CC_65D9F1_A2E2F6_679BD4',
  '105': '3F3A2F_91D0A5_7D876A_94977B',
  '106': '3F3D52_CCCED9_AFB0C6_8D8CAC',
  '107': '3F4441_D1D7D6_888F87_A2ADA1',
  '108': '403A34_B0936E_7F979C_7E6956',
  '109': '415325_83A24E_678239_748C3C',
  '110': '416BA7_A5B8D0_0D2549_65ABEB',
  '111': '422509_C89536_824512_0A0604',
  '112': '422A1E_716767_685D59_5E4F4A',
  '113': '424244_BDBBBE_8A898E_A3A4A9',
  '114': '425F84_1C2939_2A3F57_24344C',
  '115': '430404_BD9295_7E1E21_94544C',
  '116': '432322_5E3839_170C0B_543433',
  '117': '433D3F_A58D7D_786760_8C7C6D',
  '118': '434240_D3D3CF_898784_A4A49F',
  '119': '434343_9E9E9E_8C8C8C_848484',
  '120': '434C32_62704C_546244_2F3220',
  '121': '442C27_A79E90_847066_8D837C',
  '122': '447072_8ACACB_65A4A5_74B3B3',
  '123': '45432C_808361_B8C8BC_A5A27A',
  '124': '454447_908E9A_181716_7C7C7B',
  '125': '456A73_779B9E_173A46_154C5D',
  '126': '463F37_ACCFBB_818B78_91A494',
  '127': '464445_D2D0CB_919196_A8ADB0',
  '128': '464543_D1CFC1_8E8C83_A4AC9C',
  '129': '46804D_CBE9AC_90B57C_95D38F',
  '130': '468126_C1DDB5_8AC460_A1D07C',
  '131': '47392E_997E69_7C6553_8B745F',
  '132': '474444_7B7575_9E9899_8C8C8B',
  '133': '474643_696F7D_A9ABB8_8B8C93',
  '134': '474843_CECEC4_898883_A3A3A4',
  '135': '48270F_C4723B_9B5728_7B431B',
  '136': '482908_894E0D_FBDB52_CA7420',
  '137': '487FC9_A8E7F8_88CCF2_70AFDE',
  '138': '489B7A_A0E7D9_6DC5AC_87DAC7',
  '139': '48C381_226640_369F64_3CAC74',
  '140': '49200B_C6926C_9C642B_A45C26',
  '141': '495CA6_CCD2E6_A5B1D8_1E2852',
  '142': '495E48_0D100D_9D9C87_9ECC9C',
  '143': '496DBA_94C9F2_72A7E2_84B4EC',
  '144': '4A6442_D0AB75_81CD94_181B12',
  '145': '4B362C_715A4F_211913_644C44',
  '146': '4B4A3A_94A3A4_68766F_988475',
  '147': '4B5455_BBBFC4_97A0A6_838C90',
  '148': '4C240E_A5613B_895134_734C44',
  '149': '4C342A_7B584B_271912_6B4C44',
  '150': '4C462E_6D876C_9AAC8F_9AABA6',
  '151': '4C4C4C_D2D2D2_8F8F8F_ACACAC',
  '152': '4D595E_858D87_596F84_748480',
  '153': '4E4C42_B8C4C5_898E89_A3ACA4',
  '154': '4E4D40_979786_AEAEA1_878678',
  '155': '4E5150_9FA3A3_848C8A_82848C',
  '156': '4F251B_381710_43241B_602F23',
  '157': '4F439F_A28BE5_8570D6_7765C9',
  '158': '4F4742_B7B1AA_847E79_969294',
  '159': '4F4C45_A7AEAA_7A8575_9D97A2',
  '160': '4F4F4F_9C9C9C_121212_7C7C7C',
  '161': '4F4F4F_A1A1A1_8C8C8C_848484',
  '162': '4F5246_8C8D84_7B7C74_131611',
  '163': '4FE34F_2BB02B_3CD03C_1C861C',
  '164': '50332C_D98D79_955F52_AA7C6C',
  '165': '503522_C38254_9F6B45_845838',
  '166': '504D3C_979C9D_81837D_9C998A',
  '167': '513A11_CDBEB5_C8811C_9A733F',
  '168': '51462B_DFCA7E_948050_A49874',
  '169': '515151_DCDCDC_B7B7B7_9B9B9B',
  '170': '515341_9A9C86_16180D_838474',
  '171': '517919_659623_34460C_3E5813',
  '172': '519C8D_83DAC7_9DEDE0_2B5B4C',
  '173': '522221_91343B_7F6F6B_744960',
  '174': '522A1A_94543A_C3896F_AB7D66',
  '175': '525050_D4D3D3_959393_ACACAC',
  '176': '533B33_AF9998_866965_9C7E7B',
  '177': '535A2F_CDCA91_91915B_A4AC6F',
  '178': '535F6B_A6BDC8_8FA3B4_7F91A2',
  '179': '537387_75BBB9_152E5B_0E85E8',
  '180': '54584E_B1BAC5_818B91_A7ACA3',
  '181': '545B4D_D8DDC8_A0A792_B2C1A3',
  '182': '54C104_BBFA0F_97EF04_7AE104',
  '183': '55382F_78554E_271A16_6C4C44',
  '184': '555555_C8C8C8_8B8B8B_A4A4A4',
  '185': '556F42_112817_81927F_223E24',
  '186': '55C404_BCFA0E_97F004_7AE104',
  '187': '562D2A_2E1615_7E4945_703C3C',
  '188': '56352F_1E110F_311C19_3C231C',
  '189': '57553F_C6C3AF_8C8768_868C8C',
  '190': '57583E_969788_292920_848474',
  '191': '579241_B5D25D_0E1D2D_97C284',
  '192': '582410_83381A_1F0C04_30140A',
  '193': '583629_2E1810_765648_3C1C14',
  '194': '584F3A_BEC3BD_C5A57D_A39073',
  '195': '586A51_CCD5AA_8C9675_8DBBB7',
  '196': '593E2C_E5D8A9_BC9F79_9F8A68',
  '197': '595356_CDBFC6_AA9DA3_BBB3BC',
  '198': '59554F_171716_847C74_2C2C24',
  '199': '596773_B3C6CE_98AFB9_879AA8',
  '200': '597C3F_254319_6C9668_7C9B53',
  '201': '5A492B_DEC583_987D4D_AC9C74',
  '202': '5A643B_454D2C_393F25_202315',
  '203': '5B4CBC_B59AF2_9B84EB_8F78E4',
  '204': '5B5428_C5A052_A28B46_ADA752',
  '205': '5B574E_586967_807C6F_6A746C',
  '206': '5C045C_BD0DBD_930493_A404A4',
  '207': '5C2E0C_C36924_9F4F14_834114',
  '208': '5C4E41_CCCDD6_9B979B_B1AFB0',
  '209': '5C5743_262418_393727_342C20',
  '210': '5C5C04_BDBD0D_939304_A4A404',
  '211': '5C5C5C_A2A2A2_8C8C8C_848484',
  '212': '5D5854_1A1714_373330_2C2424',
  '213': '5D5D5D_CDCDCD_232323_ACACAC',
  '214': '5D5E5A_A1A29B_2A2927_8B948C',
  '215': '5E423A_8C6E69_382416_745D64',
  '216': '5E5049_CDC2BE_9C8E88_B7ACA4',
  '217': '5E5855_C6C4CD_C89B67_8F8E98',
  '218': '5E5F62_A7B2BE_211C17_939CA3',
  '219': '5ECBA4_BCFAE7_92EED0_A1F4DC',
  '220': '5F1827_9B4A60_1F0404_340406',
  '221': '5F4C4B_A07C7D_A8AFBF_868185',
  '222': '5F4F50_A18E8E_8C7C7B_211A1A',
  '223': '5F5F5F_BDBDBD_A4A4A4_9C9C9C',
  '224': '604A30_DC9065_212C14_AC9C92',
  '225': '60534A_211813_9B948E_8E837D',
  '226': '605352_E9CCC5_C7A8A3_A89291',
  '227': '606857_9BA894_8C9C83_8C9483',
  '228': '613F04_D68C04_A45F04_1F0F04',
  '229': '61583E_252314_928972_342C1C',
  '230': '617586_23304C_1B1E30_4988CF',
  '231': '622F19_885934_9A7748_94603A',
  '232': '623622_A1756F_986353_89645B',
  '233': '624541_FCD0C6_E4A19A_FCBCB4',
  '234': '626262_9E9E9E_848484_262626',
  '235': '626262_A8A8A8_949494_1F1F1F',
  '236': '626A57_3B3F33_7D8973_444C3C',
  '237': '626D5C_B8C2BB_1B230F_A4ACA3',
  '238': '627D72_A6CAAA_202C28_B4D4B4',
  '239': '630463_C30CC3_9B049B_AC04AC',
  '240': '63533B_AA9472_1C1108_9B8C68',
  '241': '63584B_E6E0D6_A8A092_BFB6A8',
  '242': '635D52_A9BCC0_B1AEA0_819598',
  '243': '636363_AAAAAA_949494_252525',
  '244': '636D6C_D4E7ED_ABBCC4_9BA4A8',
  '245': '637598_B7C4D3_22293A_9BACBF',
  '246': '64554D_D1C9C1_ABADA0_0E0C0A',
  '247': '64686F_BDC0C4_161718_A4A7AB',
  '248': '647171_1F3349_2A475C_87A5AD',
  '249': '647686_23292E_333C44_404B55',
  '250': '656662_9B9B99_393B31_8B8C8C',
  '251': '657274_2A2F30_A0A7B0_363C44',
  '252': '65A0BA_C3E4F1_A7D5E6_97CADF',
  '253': '65A0C7_C3E4F8_A7D5EF_97CAE9',
  '254': '660505_F2B090_DD4D37_AA1914',
  '255': '66605E_939198_2E261F_3C332A',
  '256': '666864_B3B4AB_2F2F2C_9CA49B',
  '257': '673B2A_99735C_99593A_3A160E',
  '258': '677E93_36444D_99A9BA_435464',
  '259': '678E67_C4D9C4_ACC8AC_98B898',
  '260': '68049F_C90DE6_A404CF_B304DC',
  '261': '683F2D_9F736D_431D06_966152',
  '262': '68493E_B2AAA9_978C8C_130907',
  '263': '684C40_776E69_9B7765_758D96',
  '264': '685B57_BEB1B1_9B99A4_1E1D1D',
  '265': '686464_CCCAC7_A4A19F_BCB4B4',
  '266': '686B73_2A2B2D_D5D9DD_B0B3BC',
  '267': '686E55_353C2F_869B7F_444434',
  '268': '696347_98B0A2_28261E_362B22',
  '269': '696969_A0A0A0_949494_8C8C8C',
  '270': '6A3C15_EFC898_D59D59_B38346',
  '271': '6A5338_1C120B_C5975F_96886C',
  '272': '6A8287_405153_839EBE_424C5C',
  '273': '6B3822_A65D48_824E48_401E0C',
  '274': '6BBD6B_C8F3C8_A3E2A3_B4ECB4',
  '275': '6C52AA_C9A6EA_A681D6_B494E2',
  '276': '6C5DC3_352D66_5C4CAB_544CA5',
  '277': '6C6F76_CBD1D7_B2BDC7_A6B0BF',
  '278': '6C8996_14223F_B9DEDD_2E445C',
  '279': '6D1616_E6CDBA_DE2B24_230F0F',
  '280': '6D3B1C_895638_502A0D_844C31',
  '281': '6D6050_C8C2B9_A2998E_B4AA9F',
  '282': '6D6D6D_3E3E3E_C0C0C0_949494',
  '283': '6E2E36_D3A1A0_BD7175_C78C8B',
  '284': '6E5137_E8CA90_271912_B99C74',
  '285': '6E524D_8496C5_AF6624_100B11',
  '286': '6E6D69_D0ECE9_AAC7C6_200C0C',
  '287': '6E7181_D1CFDF_ABAFC7_B4BCCE',
  '288': '6E8C48_B8CDA7_344018_A8BC94',
  '289': '6EC66E_C9F8C9_A3E8A3_B4F1B4',
  '290': '6F503E_D59A70_221812_B0A899',
  '291': '705B4B_312821_AF927B_44342C',
  '292': '706962_24211E_BCB6AF_ACA494',
  '293': '713A28_A87661_3A160D_9B6454',
  '294': '714C30_EAD7C5_CC9265_E2B48F',
  '295': '716049_D1C8B9_3F160C_BAA6A9',
  '296': '71623B_ECDE8C_30250A_ABA69A',
  '297': '72625B_F0DFD0_D9BAA5_C3A595',
  '298': '726F5B_A09C88_8B8C7B_94907C',
  '299': '727167_2F2F2B_A3A6A2_44443C',
  '300': '728473_534C40_7BCEC8_7BB9B6',
  '301': '736655_D9D8D5_2F281F_B1AEAB',
  '302': '745359_BFAEA8_9B8384_AC9392',
  '303': '746761_291C19_AB9385_3C2B27',
  '304': '747A6F_292E2A_ACA79F_45453B',
  '305': '74A192_041B0D_194C33_235B4C',
  '306': '75322B_96463F_51201A_3D1814',
  '307': '75723E_C0C3A0_2A1E0E_AFAE77',
  '308': '75746F_333330_A2A1A9_444444',
  '309': '758391_BAC2CA_435263_A1ACBC',
  '310': '763B28_D0BDB8_ADA39E_1E1D1D',
  '311': '763C39_431510_210504_55241C',
  '312': '764739_D0917B_2A1611_B37C68',
  '313': '765938_1F1009_A59C7C_C9A382',
  '314': '766554_C1BEBB_2A1A0E_B4ABAC',
  '315': '76787C_2F3031_A5A9B8_444446',
  '316': '767989_323437_B6C4EE_343C44',
  '317': '771A1F_D2939E_B6595D_9D4B54',
  '318': '773012_AE5124_4D1908_340F04',
  '319': '776045_D2CCC3_281910_BBB5AA',
  '320': '776A5C_BA9A89_302C26_443C34',
  '321': '776C62_292622_474039_3C342C',
  '322': '777C61_333727_BABFA1_A5AC8C',
  '323': '777D7D_BDCAD2_3E3C2E_B1B8B6',
  '324': '787165_DAD9CD_9DC0CE_36302A',
  '325': '7877EE_D87FC5_75D9C7_1C78C0',
  '326': '794E40_361612_4C2A21_441B1B',
  '327': '795038_C2856B_533320_AC7C61',
  '328': '796D6B_DED3CB_C6BAB1_ADA09B',
  '329': '796F52_36413A_C9B48C_B6A77F',
  '330': '797367_302E29_ABA3A0_443C35',
  '331': '7A6959_2D271D_C1B5A9_B4A393',
  '332': '7A736F_463F33_575046_4B463D',
  '333': '7A7A7A_D0D0D0_BCBCBC_B4B4B4',
  '334': '7A7A7A_D9D9D9_BCBCBC_B4B4B4',
  '335': '7A7C63_625531_665B3F_5B4B29',
  '336': '7A9196_485C64_425459_C1E4E7',
  '337': '7B5254_E9DCC7_B19986_C8AC91',
  '338': '7B6857_383028_BCA38F_4C3C34',
  '339': '7B6E5B_C5CACC_B1B2AE_322415',
  '340': '7B7E82_343536_A0B1C8_44444C',
  '341': '7C584C_27140D_B3765C_3D2318',
  '342': '7C7C71_353630_ADAFAF_444444',
  '343': '7D6651_F8E3BF_CEA987_E7C29C',
  '344': '7D7673_353230_AEA7B0_4C4444',
  '345': '7DA1BA_A4CCE8_5D7A8B_5E7C94',
  '346': '7E5344_22120E_CCAB9C_8D919D',
  '347': '7E5E57_AD9794_612D1D_C9997D',
  '348': '7E8174_39444D_CECAA7_B3B49B',
  '349': '7F5134_22120A_452110_9F7D5F',
  '350': '7F8896_3B3936_BBCFE9_4B4B4D',
  '351': '803537_310F10_C35A5D_D89093',
  '352': '807068_C3B0AB_443E3B_AC9C94',
  '353': '80726C_DCDBD7_9AA6C2_B7BFCA',
  '354': '808A5B_E0E1D4_2C4304_C5C7B0',
  '355': '80A6B4_D5E9EF_B2D0D9_C1DCE4',
  '356': '80CA23_B7EE37_D5FA4C_A3E434',
  '357': '812828_521818_C94141_AB3737',
  '358': '812E39_551C24_381117_9E3C49',
  '359': '815C41_F6C99A_D39F77_BB9474',
  '360': '815F54_DECBC6_301813_C5A8A0',
  '361': '8194AB_D6DFEB_C0CEDE_B0BFD1',
  '362': '81ADB3_D6ECEE_BFDEE1_AFD1D7',
  '363': '81BABA_D5F3F3_BBE4E4_ABDCDC',
  '364': '825C4D_A08175_97746C_613B2F',
  '365': '826A59_E0C9B9_CBAD99_3D2615',
  '366': '827C87_4F3937_605457_534C4E',
  '367': '834741_4C281D_BE8F8C_AE6A65',
  '368': '835984_39273A_4C334C_593D5A',
  '369': '837667_DCD4C8_C5BAAC_3C2E22',
  '370': '846556_503E33_61493D_5C4434',
  '371': '848679_363630_AABBB7_4B4B44',
  '372': '855D08_DAC31B_BF9B0C_AF860C',
  '373': '85694C_D1A67A_3C2F22_EBBF8F',
  '374': '857B61_ACE5D4_593D28_5B4334',
  '375': '858362_9F9F80_9C9673_70714B',
  '376': '85B9D3_C9EAF9_417277_528789',
  '377': '866C5B_544237_B29B8C_AC8F7C',
  '378': '872F2D_AB403E_682421_581F1C',
  '379': '877B70_34302B_CBB3A4_524C44',
  '380': '877C72_B6ACBB_36322D_4C443B',
  '381': '878787_4C4C4C_646464_5C5C5C',
  '382': '887153_E5C188_433729_C1A484',
  '383': '888D8F_515454_646A6C_6C6C6D',
  '384': '89204B_17080D_DA4377_F780B5',
  '385': '8955D0_744CC4_EA4AEF_954DA4',
  '386': '8A3B3D_DA5F62_461F20_BC7F81',
  '387': '8A3DA1_D77CE4_C263D4_B75AC9',
  '388': '8A5B34_F3BD7C_DA9758_BE7E45',
  '389': '8A6565_2E214D_D48A5F_ADA59C',
  '390': '8A7666_3C332C_C6AEA2_54443C',
  '391': '8A7968_3C342D_C6B3A5_54443B',
  '392': '8B7469_443E39_C7A797_544443',
  '393': '8B795F_291504_EFE5D4_4A3518',
  '394': '8B892C_D4E856_475E2D_47360A',
  '395': '8C5945_D4C0B6_C3A49C_430504',
  '396': '8CAEBC_3A4443_506463_DAEFEF',
  '397': '8D553D_3C2419_5D3727_AA766C',
  '398': '8D8D8D_DDDDDD_CCCCCC_B7B7B7',
  '399': '8E6767_D9C4C4_C8ACAC_B89898',
  '400': '8E7C67_E2C6A5_3B332A_C3AB94',
  '401': '8E907C_B1B5A7_D7DBD0_CCCFBA',
  '402': '8F4277_361530_BF538E_52274C',
  '403': '8F4E20_E8B06B_391A08_CC8944',
  '404': '8F5D3C_5B3B26_382416_70482E',
  '405': '8F7B61_D6B892_4E4436_C3AC86',
  '406': '8F894E_DAD79B_C9C384_C4BE7B',
  '407': '903B2A_EC9888_D96747_58190D',
  '408': '906867_C7B6BC_5D2E26_BEA4A3',
  '409': '908887_3C3229_C7C6D0_554A45',
  '410': '908E8E_292828_454444_595757',
  '411': '909473_555D4B_C2CCA2_645B3C',
  '412': '910E5A_E127C3_CF1CA3_C1158F',
  '413': '926B48_4C2D0D_5F3913_AA8874',
  '414': '927253_EECEA7_D8B792_C7A883',
  '415': '935555_F6DAD9_D39393_593333',
  '416': '936451_C29A8F_5F3A2B_361D14',
  '417': '938C8D_403731_CECED8_554C4C',
  '418': '942967_D292B5_C76E9E_551A4C',
  '419': '945D43_E5AAA0_351F14_CC8B78',
  '420': '94615B_DACED1_C3B9A4_CCABAA',
  '421': '94624F_573529_24110C_733424',
  '422': '9650CA_46236A_7239A6_633492',
  '423': '965146_2B191D_DF7A5C_BFD6E1',
  '424': '96785D_B8A398_63452C_6C5435',
  '425': '975337_EEBE98_4B211C_D88659',
  '426': '977970_E1D9D8_DAC8C1_C4B2AD',
  '427': '98332E_4A100D_691A16_A85A5B',
  '428': '989784_665542_BFECE5_6D644C',
  '429': '9A5A55_31110D_582A24_703C34',
  '430': '9A7467_D2C2BF_662D22_CCB2A5',
  '431': '9AA8B6_313133_4E5055_D7EBF8',
  '432': '9B4816_E8A138_CC7421_DC8827',
  '433': '9B9994_E1E0DB_474643_544C4C',
  '434': '9B9B9B_1E1E1E_5C5C5C_444444',
  '435': '9C5B3B_49200A_E9C8AB_DDAB7D',
  '436': '9CC338_4E671A_799F27_8CAC2C',
  '437': '9D282A_38191D_DFC6CD_D6495A',
  '438': '9D4343_E38989_D37474_CE6C6C',
  '439': '9D602E_E4C363_D5A64F_C38A44',
  '440': '9D7F6E_C6DAD4_6D4C4B_C6BBBC',
  '441': '9D8F84_5D4544_D9D3C9_62555A',
  '442': '9D9D9D_4E4E4E_646464_6C6C6C',
  '443': '9E7C7E_DDCBD0_351D20_683B38',
  '444': '9E9C77_6E6F4E_7C7C54_C7BF96',
  '445': '9F1A27_F1AF7F_CD5845_D08441',
  '446': '9F4738_CE958D_4F0C0A_C0837C',
  '447': '9F7D30_B69F75_B9B7BE_CB9C4D',
  '448': '9F886D_362F25_E8C9A4_5C4C3C',
  '449': '9F9F9F_E4E4E4_D4D4D4_CCCCCC',
  '450': 'A05F31_D5C2BC_D9996F_42230E',
  '451': 'A0A8B0_424336_E7E9EF_545C5C',
  '452': 'A1824F_4A2A06_F7E29F_B3A598',
  '453': 'A27216_E9D036_D0AB24_DCB927',
  '454': 'A28766_E4D6C3_D6C4AA_CAB598',
  '455': 'A3B2A4_3B3E3D_676F6A_535C57',
  '456': 'A48DA4_E8DDE8_C9B7C9_D4C2D4',
  '457': 'A49994_695244_C4C2CF_76645C',
  '458': 'A67362_36150C_5E2E1E_F6C3BF',
  '459': 'A84337_611D18_3F110F_7C2A22',
  '460': 'A88C77_DAD2C7_623532_956229',
  '461': 'A95E4D_57261A_6E3223_773C24',
  '462': 'A971A9_E8CBE8_D4A8D4_DCB3DC',
  '463': 'A98D6A_F2D3AB_FBE6BE_695332',
  '464': 'A9A2A0_2F211C_544440_6D5E5A',
  '465': 'AA526C_EAA6C9_DC88AF_D17BA0',
  '466': 'AB2C2C_EBB4B3_561212_DE8484',
  '467': 'AB2D08_C35E5A_C75522_C56C70',
  '468': 'AB54A8_EBAAE9_DF8FDD_D37ED0',
  '469': 'AC171C_FA8593_E84854_D3464E',
  '470': 'AC725C_2E1610_663E31_E78F6B',
  '471': 'AC7F84_78463A_C4AABB_885454',
  '472': 'AC8942_432D19_6E4D27_5F3B1C',
  '473': 'AC8961_EBDAC3_D1B791_DCC2A0',
  '474': 'AD9E81_F1E5CE_6B5C3E_5A492A',
  '475': 'ADC2CD_DFF7FA_C9E6F5_C1DBEC',
  '476': 'AE9D99_29303B_585F70_875C33',
  '477': 'AF986F_CDB489_9C7C5B_7E6C4D',
  '478': 'AF987A_2F2416_523F27_6B5331',
  '479': 'AF9A72_504718_74652B_E2C2A2',
  '480': 'B06932_451B09_7B3E16_150804',
  '481': 'B09273_7A573D_C7AF97_84644C',
  '482': 'B0A2A8_866A63_E8E9F2_614C4F',
  '483': 'B0B0B0_6E6E6E_848484_8C8C8C',
  '484': 'B1A395_EFE6E1_635A47_786D5D',
  '485': 'B2674B_552913_7C442F_733919',
  '486': 'B26F52_4B2E2B_79493A_663B32',
  '487': 'B27744_5A2804_F6C488_EBB27D',
  '488': 'B38B76_40251D_745042_5F3A30',
  '489': 'B3AA93_F4EFD7_E1DDC2_DCD3BB',
  '490': 'B47A5B_301E14_704A31_633C23',
  '491': 'B4B29D_442D0D_604E2A_736542',
  '492': 'B5987E_F8E4DC_6F5939_E9CCBA',
  '493': 'B5BBB5_3B4026_6E745D_5C6147',
  '494': 'B62D33_E4868B_7E2D34_DD6469',
  '495': 'B66D59_F0C9B2_E5B49C_DAA084',
  '496': 'B67F6B_4B2E2A_6C3A34_F3DBC6',
  '497': 'B6B8B1_994A24_315C81_927963',
  '498': 'B76E5E_7F3A2F_EE938C_F8A5A1',
  '499': 'B7A763_E6E1CC_554A1E_6C6428',
  '500': 'B86137_FBCA6F_6F3C37_040404',
  '501': 'B9896A_5B341B_F4CAA3_6C4C2D',
  '502': 'B98A6D_7B4F38_D1A68F_8C5B43',
  '503': 'B9B37A_F1EED0_E5E4BA_DAD6A8',
  '504': 'B9CDD2_775339_958272_7F6A5E',
  '505': 'BA472D_CA6E67_C76150_CA6C59',
  '506': 'BA5DBA_F2BEF2_E69BE6_DC8CDC',
  '507': 'BA864A_5D381E_644422_FBE97A',
  '508': 'BA8979_DDCBCA_9A4726_892407',
  '509': 'BAADA8_ECE6E7_9A8378_E3DCD3',
  '510': 'BC5B43_95170B_EEAC92_DB8C7C',
  '511': 'BC928D_F9E2D6_654445_835A51',
  '512': 'BD0D0D_970404_7B0404_550404',
  '513': 'BD5345_460F11_732622_EDB7B1',
  '514': 'BDB466_F3EDC3_E3DD9F_ECE3AA',
  '515': 'BE5F5F_F4BDBD_ECA4A4_E29191',
  '516': 'BEE2E9_7E6A53_9AA09C_87837E',
  '517': 'BF7051_994C2D_E99A7B_DE8C74',
  '518': 'BF7745_F5D08E_E5AE6B_ECBC7C',
  '519': 'BF8E78_E5CCBF_753E32_4A261E',
  '520': 'BFAA83_F5EAD6_E1D0B1_EBDDC0',
  '521': 'BFB5A4_DEDCCB_D7D4CC_DCD3C2',
  '522': 'C05429_ED6129_94492A_834729',
  '523': 'C09E5C_DAD2B9_654429_81582D',
  '524': 'C1AA92_AD6E29_737889_CED1D7',
  '525': 'C1B3A1_F6EEE5_E1D7C7_ECE4D3',
  '526': 'C21338_920C24_E71C54_F34A7D',
  '527': 'C28E4E_845119_0B0805_713C0C',
  '528': 'C2A391_523728_785741_694836',
  '529': 'C2A584_363B41_71665B_8C7367',
  '530': 'C2AB7D_4A412E_7A6B4E_F9EDBE',
  '531': 'C30C0C_9F0404_830404_5C0404',
  '532': 'C33829_48171A_752523_942923',
  '533': 'C345EC_5F1DAA_9F31DB_872CCD',
  '534': 'C35C04_F9C30C_EE9F04_E08304',
  '535': 'C3CCD4_5F3B23_948A7B_A9A49A',
  '536': 'C47004_F9D00C_EDAF04_E09704',
  '537': 'C4A591_635448_F2D9D5_856D5B',
  '538': 'C4C6C6_4D5756_646463_7A8080',
  '539': 'C4DEDE_97B5B5_EAF9F9_ABC4C4',
  '540': 'C5A292_635247_F2D7D6_846A5B',
  '541': 'C5BBB6_F8F4F1_E2DAD6_ECE3DF',
  '542': 'C75F55_F8BDA9_EB9484_F4A494',
  '543': 'C7938D_E0DBE1_D1BBBC_D5CCCB',
  '544': 'C7B9A1_F8F1E4_EEE4D2_E4D8C4',
  '545': 'C7C0AC_2E181B_543B30_6B6270',
  '546': 'C7C7D7_4C4E5A_818393_6C6C74',
  '547': 'C87157_F8CBAE_E9A582_F2B394',
  '548': 'C88467_5B3333_875C5A_7A3822',
  '549': 'C8AF84_F9ECD7_EFDEBF_E6D1AF',
  '550': 'C8C8C8_3F3F3F_787878_5C5C5C',
  '551': 'C8D1DC_575B62_818892_6E747B',
  '552': 'C98D7F_3B0B0B_A97667_94433F',
  '553': 'C99A8B_491B0E_6E4136_8A4D28',
  '554': 'C9C7BE_55514B_888279_7B6E5F',
  '555': 'CA4FE1_6B2398_A337C7_9334BC',
  '556': 'CA8892_F9D7DC_EBB8C0_F3C4CC',
  '557': 'CAA094_875343_956255_EADEDC',
  '558': 'CAA78A_F9E7D7_EAD0B9_F3DCC3',
  '559': 'CAAC80_FAEBD5_F2DEBF_EAD1AF',
  '560': 'CAB094_F9ECDD_EFDEC8_E8D4BD',
  '561': 'CAB79D_F9F1E3_F1E5D1_E9DAC6',
  '562': 'CAE24E_6C9A23_A3C737_B3D43C',
  '563': 'CB4934_FB9971_F07554_F68464',
  '564': 'CB4E88_F99AD6_F384C3_ED75B9',
  '565': 'CB5E3B_FABC7A_EF965E_F4A46C',
  '566': 'CB7146_551D0F_7C270D_E5AB9C',
  '567': 'CB7846_753C22_AB5C32_B46C3C',
  '568': 'CB919B_F9DDE1_ECC0C8_F4CCD4',
  '569': 'CBCBCB_595959_8C8C8C_747474',
  '570': 'CC7C5F_A15436_B26346_AF5C3C',
  '571': 'CC9A7E_8A5249_C06A3E_DADADA',
  '572': 'CCC5C9_3B2B2B_67585B_7F7375',
  '573': 'CCF6FA_9DD9EB_82C5D9_ACD4E4',
  '574': 'CDC3B8_5A3F3C_67545A_8D7769',
  '575': 'CDCBC8_444342_696765_81807E',
  '576': 'CE8C15_EAC79B_DDAB57_F9C962',
  '577': 'CE8F3D_F0D2B0_F3C77D_E6B278',
  '578': 'CEB299_6B5C4C_887564_746355',
  '579': 'D04444_AF2F2F_8B2424_9B2C2C',
  '580': 'D07E3F_FBBD1F_8D2840_24120C',
  '581': 'D0CCCB_524D50_928891_727581',
  '582': 'D0D3BE_816854_998366_685146',
  '583': 'D1AC04_F8E50A_EDD004_B38D04',
  '584': 'D3CAAB_8C866E_C0B89A_AEA68A',
  '585': 'D4855F_92512D_AE6742_A75C2C',
  '586': 'D54C2B_5F1105_F39382_F08375',
  '587': 'D5B5B4_9E6C6F_F5E9EF_A57986',
  '588': 'D5D5D5_929292_ACACAC_B4B4B4',
  '589': 'D64480_E27497_EA9BB1_CD156F',
  '590': 'D7D7C3_AAAA92_F5F5EA_BCBCA4',
  '591': 'D7DFDB_AAB5AF_F5FAF7_BCC4C4',
  '592': 'D8388B_230A14_FCC8FC_FC71E1',
  '593': 'D8C949_F5F19E_6B7855_9A9858',
  '594': 'D8D8E5_9D9DAF_B4B4C4_B4B4CC',
  '595': 'DA5788_DE94BD_E078A3_DD83B4',
  '596': 'DBDBBB_F7F7E4_AFAF89_C4C49C',
  '597': 'DC3E04_B52604_FC7D20_F85F04',
  '598': 'DE9261_86361E_A85A37_944C2C',
  '599': 'DEDEC4_B5B597_F9F9EA_C4C4AB',
  '600': 'DEE3E8_A6AEB5_BCC4CC_BCC4C4',
  '601': 'DEE8DE_A6B5A6_BCCCBC_BCC4BC',
  '602': 'DEE8E8_A6B5B5_BCCCCC_BAC4C4',
  '603': 'DFD9C2_B5AE92_F9F7EA_C4C4A4',
  '604': 'DFDBB7_F9F8E3_B5AF86_BCBC8C',
  '605': 'DFDFCA_4D2D07_6B5224_857145',
  '606': 'DFDFD6_58544E_81766A_989288',
  '607': 'E1E1D4_777C7B_9FA19A_898F8D',
  '608': 'E1E1E0_363636_989897_747472',
  '609': 'E2D3BC_867255_B39E7F_96836C',
  '610': 'E2E2E7_AEAEB5_C4C4CC_C4C4C4',
  '611': 'E42E12_F35132_F86949_B71B0A',
  '612': 'E5DED7_AFA69D_C4BCB4_C3BAAB',
  '613': 'E6BF3C_5A4719_977726_FCFC82',
  '614': 'E6E3E3_B5AFAF_CCC4C4_C4C4C4',
  '615': 'E6E6E6_AAAAAA_C4C4C4_CCCCCC',
  '616': 'E7632F_FBA06B_BB2905_FB865E',
  '617': 'E7E2D8_B1AA9D_C9C2B3_BCB4AC',
  '618': 'E80404_B50404_CB0404_FC3333',
  '619': 'E804E8_B504B5_CC04CC_FC33FC',
  '620': 'E8DEE1_B5A6AA_CCBCC1_C4BBBC',
  '621': 'E8E5DE_B5AFA6_CCC5BC_C4C4BB',
  '622': 'E8E8DE_B5B5A6_CCCCBC_C4C4BA',
  '623': 'E9CCA1_A63106_DF8C3B_621304',
  '624': 'EA783E_6D4830_905837_FCDC6C',
  '625': 'EAD8D6_B59A97_CCB4B0_C9ABAB',
  '626': 'EAEAEA_B5B5B5_CCCCCC_D4D4D4',
  '627': 'EAEAEA_B6B6B6_CCCCCC_C4C4C4',
  '628': 'ED4630_791A0E_A42716_501009',
  '629': 'ED5087_FAC3D0_1C0B0C_FC84CC',
  '630': 'ED7F04_FCD60E_7E2D04_B73E04',
  '631': 'EDED06_B5B504_CCCC04_D4D404',
  '632': 'EE4128_FC8E82_9A0704_BF0F05',
  '633': 'EEECFB_BFB6D5_D0C8EB_CCC4DC',
  '634': 'F0D504_FBFAD3_B98609_CDA204',
  '635': 'F75F0B_461604_9A3004_FB9D2F',
  '636': 'F77777_FBE1E1_FAB2B2_FBC4C4',
  '637': 'F79686_FCCBD4_E76644_E76B56',
  '638': 'F9E6C7_FCF7DF_EDD3AA_F1D4B4',
  '639': 'FBB43F_FBE993_FB552E_FCDD65',
  '640': 'FBB82D_FBEDBF_FBDE7D_FB7E05'
};

function getFormatString(format) {
  switch (format) {
    case 64:
      return '-64px';

    case 128:
      return '-128px';

    case 256:
      return '-256px';

    case 512:
      return '-512px';

    default:
      return '';
  }
}

var MATCAP_ROOT = 'https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d';
var DEFAULT_MATCAP = matcapList[0];
function useMatcapTexture(id, format) {
  if (id === void 0) {
    id = 0;
  }

  if (format === void 0) {
    format = 1024;
  }

  var numTot = React.useMemo(function () {
    return Object.keys(matcapList).length;
  }, []);
  var fileHash = React.useMemo(function () {
    if (typeof id === 'string') {
      return id;
    } else if (typeof id === 'number') {
      return matcapList[id];
    }

    return null;
  }, [id]);
  var fileName = "" + (fileHash || DEFAULT_MATCAP) + getFormatString(format) + ".png";
  var url = MATCAP_ROOT + "/" + format + "/" + fileName;
  var matcapTexture = useTexture(url);
  return [matcapTexture, url, numTot];
}

var normalsList = {
  '0': '151_norm.JPG',
  '1': '152_norm.JPG',
  '2': '153_norm.JPG',
  '3': '154_norm.JPG',
  '4': '155_norm.JPG',
  '5': '156_norm.JPG',
  '6': '157_norm.JPG',
  '7': '158_norm.JPG',
  '8': '159_norm.JPG',
  '9': '160_norm.JPG',
  '10': '161_norm.JPG',
  '11': '162_norm.JPG',
  '12': '163_norm.JPG',
  '13': '164_norm.JPG',
  '14': '165_norm.JPG',
  '15': '166_norm.JPG',
  '16': '167_norm.JPG',
  '17': '168_norm.JPG',
  '18': '169_norm.JPG',
  '19': '170_norm.JPG',
  '20': '171_norm.JPG',
  '21': '172_norm.JPG',
  '22': '173_norm.JPG',
  '23': '174_norm.jpg',
  '24': '175_norm.JPG',
  '25': '176_norm.JPG',
  '26': '177_norm.JPG',
  '27': '178_norm.JPG',
  '28': '179_norm.JPG',
  '29': '180_norm.JPG',
  '30': '181_norm.JPG',
  '31': '182_norm.JPG',
  '32': '183_norm.JPG',
  '33': '184_norm.JPG',
  '34': '185_norm.JPG',
  '35': '186_norm.JPG',
  '36': '187_norm.JPG',
  '37': '188_norm.JPG',
  '38': '189_norm.JPG',
  '39': '190_norm.JPG',
  '40': '191_norm.JPG',
  '41': '192_norm.JPG',
  '42': '193_norm.JPG',
  '43': '194_norm.JPG',
  '44': '195_norm.JPG',
  '45': '196_norm.JPG',
  '46': '197_norm.JPG',
  '47': '198_norm.JPG',
  '48': '199_norm.JPG',
  '49': '200_norm.JPG',
  '50': '201_norm.jpg',
  '51': '202_norm.jpg',
  '52': '203_norm.jpg',
  '53': '204_norm.jpg',
  '54': '205_norm.jpg',
  '55': '206_norm.jpg',
  '56': '207_norm.jpg',
  '57': '208_norm.jpg',
  '58': '209_norm.jpg',
  '59': '210_norm.jpg',
  '60': '211_norm.jpg',
  '61': '212_norm.jpg',
  '62': '213_norm.jpg',
  '63': '214_norm.jpg',
  '64': '215_norm.jpg',
  '65': '216_norm.jpg',
  '66': '217_norm.jpg',
  '67': '218_norm.jpg',
  '68': '219_norm.jpg',
  '69': '220_norm.jpg',
  '70': '221_norm.jpg',
  '71': '222_norm.jpg',
  '72': '223_norm.jpg',
  '73': '224_norm.jpg',
  '74': '225_norm.jpg',
  '75': '226_norm.jpg'
};

var NORMAL_ROOT = 'https://rawcdn.githack.com/emmelleppi/normal-maps/f24c810fc1d86b5b1e5dfea914b668f70b5f2923';
var DEFAULT_NORMAL = normalsList[0];
function useNormalTexture(id, settings) {
  if (id === void 0) {
    id = 0;
  }

  if (settings === void 0) {
    settings = {};
  }

  var _settings = settings,
      _settings$repeat = _settings.repeat,
      repeat = _settings$repeat === void 0 ? [1, 1] : _settings$repeat,
      _settings$anisotropy = _settings.anisotropy,
      anisotropy = _settings$anisotropy === void 0 ? 1 : _settings$anisotropy,
      _settings$offset = _settings.offset,
      offset = _settings$offset === void 0 ? [0, 0] : _settings$offset;
  var numTot = React.useMemo(function () {
    return Object.keys(normalsList).length;
  }, []);
  var imageName = normalsList[id] || DEFAULT_NORMAL;
  var url = NORMAL_ROOT + "/normals/" + imageName;
  var normalTexture = useTexture(url);
  React.useEffect(function () {
    if (!normalTexture) return;
    normalTexture.wrapS = normalTexture.wrapT = THREE.RepeatWrapping;
    normalTexture.repeat = new THREE.Vector2(repeat[0], repeat[1]);
    normalTexture.offset = new THREE.Vector2(offset[0], offset[1]);
    normalTexture.anisotropy = anisotropy;
  }, [normalTexture, anisotropy, repeat, offset]);
  return [normalTexture, url, numTot];
}

exports.Billboard = Billboard;
exports.BlurPass = BlurPass;
exports.Box = Box;
exports.CameraShake = CameraShake;
exports.Center = Center;
exports.Circle = Circle;
exports.Cloud = Cloud;
exports.Cone = Cone;
exports.ContactShadows = ContactShadows;
exports.CubeCamera = CubeCamera;
exports.CubicBezierLine = CubicBezierLine;
exports.CurveModifier = CurveModifier;
exports.Cylinder = Cylinder;
exports.Detailed = Detailed;
exports.DeviceOrientationControls = DeviceOrientationControls;
exports.Dodecahedron = Dodecahedron;
exports.Effects = Effects;
exports.Environment = Environment;
exports.Extrude = Extrude;
exports.FlyControls = FlyControls;
exports.GizmoHelper = GizmoHelper;
exports.GizmoViewcube = GizmoViewcube;
exports.GizmoViewport = GizmoViewport;
exports.Html = Html;
exports.Icosahedron = Icosahedron;
exports.Lathe = Lathe;
exports.Line = Line;
exports.Loader = Loader;
exports.MapControls = MapControls;
exports.MeshDistortMaterial = MeshDistortMaterial;
exports.MeshReflectorMaterial = MeshReflectorMaterial;
exports.MeshWobbleMaterial = MeshWobbleMaterial;
exports.Octahedron = Octahedron;
exports.OrbitControls = OrbitControls;
exports.OrthographicCamera = OrthographicCamera;
exports.Parametric = Parametric;
exports.PerspectiveCamera = PerspectiveCamera;
exports.Plane = Plane;
exports.PointerLockControls = PointerLockControls;
exports.Polyhedron = Polyhedron;
exports.PositionalAudio = PositionalAudio;
exports.Preload = Preload;
exports.QuadraticBezierLine = QuadraticBezierLine;
exports.Reflector = Reflector;
exports.Ring = Ring;
exports.RoundedBox = RoundedBox;
exports.ScreenQuad = ScreenQuad;
exports.Shadow = Shadow;
exports.Sky = Sky;
exports.Sphere = Sphere;
exports.Stars = Stars;
exports.Stats = Stats;
exports.Tetrahedron = Tetrahedron;
exports.Text = Text;
exports.Torus = Torus;
exports.TorusKnot = TorusKnot;
exports.TrackballControls = TrackballControls;
exports.TransformControls = TransformControls;
exports.Tube = Tube;
exports.calcPosFromAngles = calcPosFromAngles;
exports.isWebGL2Available = isWebGL2Available;
exports.meshBounds = meshBounds;
exports.shaderMaterial = shaderMaterial;
exports.softShadows = softShadows;
exports.useAnimations = useAnimations;
exports.useAspect = useAspect;
exports.useCamera = useCamera;
exports.useContextBridge = useContextBridge;
exports.useCubeTexture = useCubeTexture;
exports.useDetectGPU = useDetectGPU;
exports.useEdgeSplit = useEdgeSplit;
exports.useFBO = useFBO;
exports.useFBX = useFBX;
exports.useGLTF = useGLTF;
exports.useGizmoContext = useGizmoContext;
exports.useHelper = useHelper;
exports.useMatcapTexture = useMatcapTexture;
exports.useNormalTexture = useNormalTexture;
exports.useProgress = useProgress;
exports.useSimplification = useSimplification;
exports.useTessellation = useTessellation;
exports.useTexture = useTexture;
